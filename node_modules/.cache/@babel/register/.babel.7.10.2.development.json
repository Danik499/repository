{
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\ejs\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\ejs\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\ejs\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\ejs\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\ejs\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\ejs",
      "filename": "C:\\Users\\User\\Desktop\\ejs\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\ejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\ejs\\src\\app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\ejs\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\ejs\\src\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); // require(\"ejs\");\n\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded());\napp.set(\"view engine\", \"ejs\");\napp.engine('ejs', require('ejs').__express);\napp.get(\"/\", function (req, res) {\n  res.render(\"index\");\n});\napp.listen(3000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJzZXQiLCJlbmdpbmUiLCJyZXF1aXJlIiwiX19leHByZXNzIiwiZ2V0IiwicmVxIiwicmVzIiwicmVuZGVyIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUEsSUFBSUEsR0FBRyxHQUFHLDBCQUFWLEMsQ0FDQTs7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRRSxVQUFSLEVBQVI7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVEsYUFBUixFQUF1QixLQUF2QjtBQUNBTCxHQUFHLENBQUNNLE1BQUosQ0FBVyxLQUFYLEVBQWtCQyxPQUFPLENBQUMsS0FBRCxDQUFQLENBQWVDLFNBQWpDO0FBRUFSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFVQyxHQUFWLEVBQWVDLEdBQWYsRUFBb0I7QUFDN0JBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLE9BQVg7QUFDSCxDQUZEO0FBSUFaLEdBQUcsQ0FBQ2EsTUFBSixDQUFXLElBQVgiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFxlanNcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcclxuXHJcbnZhciBhcHAgPSBleHByZXNzKCk7XHJcbi8vIHJlcXVpcmUoXCJlanNcIik7XHJcblxyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcclxuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoKSk7XHJcbmFwcC5zZXQoXCJ2aWV3IGVuZ2luZVwiLCBcImVqc1wiKTtcclxuYXBwLmVuZ2luZSgnZWpzJywgcmVxdWlyZSgnZWpzJykuX19leHByZXNzKTtcclxuXHJcbmFwcC5nZXQoXCIvXCIsIGZ1bmN0aW9uIChyZXEsIHJlcykge1xyXG4gICAgcmVzLnJlbmRlcihcImluZGV4XCIpO1xyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4oMzAwMCk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "set",
        "engine",
        "require",
        "__express",
        "get",
        "req",
        "res",
        "render",
        "listen"
      ],
      "mappings": ";;AAAA;;;;AAEA,IAAIA,GAAG,GAAG,0BAAV,C,CACA;;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,EAAR;AACAJ,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAL,GAAG,CAACM,MAAJ,CAAW,KAAX,EAAkBC,OAAO,CAAC,KAAD,CAAP,CAAeC,SAAjC;AAEAR,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC7BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACH,CAFD;AAIAZ,GAAG,CAACa,MAAJ,CAAW,IAAX",
      "sourceRoot": "C:\\Users\\User\\Desktop\\ejs\\src\\",
      "sourcesContent": [
        "import express from \"express\";\r\n\r\nvar app = express();\r\n// require(\"ejs\");\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded());\r\napp.set(\"view engine\", \"ejs\");\r\napp.engine('ejs', require('ejs').__express);\r\n\r\napp.get(\"/\", function (req, res) {\r\n    res.render(\"index\");\r\n});\r\n\r\napp.listen(3000);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591799644318
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\asdfg",
      "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\asdfg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\asdfg\\src\\app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded());\napp.use((0, _cookieParser[\"default\"])());\napp.use(\"/\", _api[\"default\"]);\napp.listen(3000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJhcGlSb3V0ZXIiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQSxJQUFJQSxHQUFHLEdBQUcsMEJBQVY7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRRSxVQUFSLEVBQVI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsK0JBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhSSxlQUFiO0FBRUFMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLElBQVgiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFxhc2RmZ1xcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgYXBpUm91dGVyIGZyb20gJy4vYXBpJztcclxuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tIFwiY29va2llLXBhcnNlclwiO1xyXG52YXIgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKCkpO1xyXG5hcHAudXNlKGNvb2tpZVBhcnNlcigpKVxyXG5hcHAudXNlKFwiL1wiLCBhcGlSb3V0ZXIpO1xyXG5cclxuYXBwLmxpc3RlbigzMDAwKTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "apiRouter",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AACA,IAAIA,GAAG,GAAG,0BAAV;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,EAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQ,+BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaI,eAAb;AAEAL,GAAG,CAACM,MAAJ,CAAW,IAAX",
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\",
      "sourcesContent": [
        "import express from \"express\";\r\nimport apiRouter from './api';\r\nimport cookieParser from \"cookie-parser\";\r\nvar app = express();\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded());\r\napp.use(cookieParser())\r\napp.use(\"/\", apiRouter);\r\n\r\napp.listen(3000);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592981233241
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\asdfg",
      "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\asdfg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _index = _interopRequireDefault(require(\"./controller/index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar apiRouter = new _express.Router();\napiRouter.use(\"/\", _index[\"default\"]);\nvar _default = apiRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwaVJvdXRlciIsIlJvdXRlciIsInVzZSIsInN0dWRSb3V0ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUNBLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxlQUFKLEVBQWxCO0FBRUFELFNBQVMsQ0FBQ0UsR0FBVixDQUFjLEdBQWQsRUFBbUJDLGlCQUFuQjtlQUVlSCxTIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcYXNkZmdcXHNyY1xcYXBpXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgc3R1ZFJvdXRlciBmcm9tIFwiLi9jb250cm9sbGVyL2luZGV4XCI7XHJcbmNvbnN0IGFwaVJvdXRlciA9IG5ldyBSb3V0ZXIoKTtcclxuXHJcbmFwaVJvdXRlci51c2UoXCIvXCIsIHN0dWRSb3V0ZXIpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBpUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "apiRouter",
        "Router",
        "use",
        "studRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AACA,IAAMA,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAD,SAAS,CAACE,GAAV,CAAc,GAAd,EAAmBC,iBAAnB;eAEeH,S",
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport studRouter from \"./controller/index\";\r\nconst apiRouter = new Router();\r\n\r\napiRouter.use(\"/\", studRouter);\r\n\r\nexport default apiRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1591801334321
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\asdfg",
      "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\asdfg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _controller = _interopRequireDefault(require(\"./controller\"));\n\nvar _regController = _interopRequireDefault(require(\"./regController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar studRouter = new _express[\"default\"](); //render\n\nstudRouter.get(\"/main\", _controller[\"default\"].main);\nstudRouter.get(\"/registration\", _controller[\"default\"].regPage);\nstudRouter.get(\"/loginPage\", _controller[\"default\"].logInPage);\nstudRouter.get(\"/waitForRole\", _controller[\"default\"].waiting);\nstudRouter.get(\"/teacherPage\", _controller[\"default\"].teacherPage);\nstudRouter.get(\"/adminPage\", _controller[\"default\"].adminPage); //registration\n\nstudRouter.post(\"/login\", _regController[\"default\"].logIn);\nstudRouter.post(\"/add\", _regController[\"default\"].registration); //other functions\n\nstudRouter.post(\"/editRoles\", _controller[\"default\"].editRoles);\nstudRouter.post(\"/addSubjects\", _controller[\"default\"].addSubjects);\nstudRouter.post(\"/removeSubjects\", _controller[\"default\"].removeSubjects);\nstudRouter.post(\"/addTopics\", _controller[\"default\"].addTopics);\nstudRouter.post(\"/removeTopics\", _controller[\"default\"].removeTopics);\nstudRouter.post(\"/editAssessmentsPage\", _controller[\"default\"].editAssessmentsPage);\nstudRouter.get(\"/gett\", _controller[\"default\"].get);\nstudRouter[\"delete\"](\"/delete\", _controller[\"default\"].deleteById);\nvar _default = studRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInN0dWRSb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJDb250cm9sbGVyIiwibWFpbiIsInJlZ1BhZ2UiLCJsb2dJblBhZ2UiLCJ3YWl0aW5nIiwidGVhY2hlclBhZ2UiLCJhZG1pblBhZ2UiLCJwb3N0IiwicmVnQ29udHJvbGxlciIsImxvZ0luIiwicmVnaXN0cmF0aW9uIiwiZWRpdFJvbGVzIiwiYWRkU3ViamVjdHMiLCJyZW1vdmVTdWJqZWN0cyIsImFkZFRvcGljcyIsInJlbW92ZVRvcGljcyIsImVkaXRBc3Nlc3NtZW50c1BhZ2UiLCJkZWxldGVCeUlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsSUFBSUMsbUJBQUosRUFBbkIsQyxDQUVBOztBQUNBRCxVQUFVLENBQUNFLEdBQVgsQ0FBZSxPQUFmLEVBQXdCQyx1QkFBV0MsSUFBbkM7QUFDQUosVUFBVSxDQUFDRSxHQUFYLENBQWUsZUFBZixFQUFnQ0MsdUJBQVdFLE9BQTNDO0FBQ0FMLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLFlBQWYsRUFBNkJDLHVCQUFXRyxTQUF4QztBQUNBTixVQUFVLENBQUNFLEdBQVgsQ0FBZSxjQUFmLEVBQStCQyx1QkFBV0ksT0FBMUM7QUFDQVAsVUFBVSxDQUFDRSxHQUFYLENBQWUsY0FBZixFQUErQkMsdUJBQVdLLFdBQTFDO0FBQ0FSLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLFlBQWYsRUFBNkJDLHVCQUFXTSxTQUF4QyxFLENBRUE7O0FBQ0FULFVBQVUsQ0FBQ1UsSUFBWCxDQUFnQixRQUFoQixFQUEwQkMsMEJBQWNDLEtBQXhDO0FBQ0FaLFVBQVUsQ0FBQ1UsSUFBWCxDQUFnQixNQUFoQixFQUF3QkMsMEJBQWNFLFlBQXRDLEUsQ0FFQTs7QUFDQWIsVUFBVSxDQUFDVSxJQUFYLENBQWdCLFlBQWhCLEVBQThCUCx1QkFBV1csU0FBekM7QUFDQWQsVUFBVSxDQUFDVSxJQUFYLENBQWdCLGNBQWhCLEVBQWdDUCx1QkFBV1ksV0FBM0M7QUFDQWYsVUFBVSxDQUFDVSxJQUFYLENBQWdCLGlCQUFoQixFQUFtQ1AsdUJBQVdhLGNBQTlDO0FBQ0FoQixVQUFVLENBQUNVLElBQVgsQ0FBZ0IsWUFBaEIsRUFBOEJQLHVCQUFXYyxTQUF6QztBQUNBakIsVUFBVSxDQUFDVSxJQUFYLENBQWdCLGVBQWhCLEVBQWlDUCx1QkFBV2UsWUFBNUM7QUFDQWxCLFVBQVUsQ0FBQ1UsSUFBWCxDQUFnQixzQkFBaEIsRUFBd0NQLHVCQUFXZ0IsbUJBQW5EO0FBRUFuQixVQUFVLENBQUNFLEdBQVgsQ0FBZSxPQUFmLEVBQXdCQyx1QkFBV0QsR0FBbkM7QUFDQUYsVUFBVSxVQUFWLENBQWtCLFNBQWxCLEVBQTZCRyx1QkFBV2lCLFVBQXhDO2VBRWVwQixVIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcYXNkZmdcXHNyY1xcYXBpXFxjb250cm9sbGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUm91dGVyIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBDb250cm9sbGVyIGZyb20gXCIuL2NvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHJlZ0NvbnRyb2xsZXIgZnJvbSBcIi4vcmVnQ29udHJvbGxlclwiO1xyXG5cclxuY29uc3Qgc3R1ZFJvdXRlciA9IG5ldyBSb3V0ZXIoKTtcclxuXHJcbi8vcmVuZGVyXHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL21haW5cIiwgQ29udHJvbGxlci5tYWluKTtcclxuc3R1ZFJvdXRlci5nZXQoXCIvcmVnaXN0cmF0aW9uXCIsIENvbnRyb2xsZXIucmVnUGFnZSk7XHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL2xvZ2luUGFnZVwiLCBDb250cm9sbGVyLmxvZ0luUGFnZSk7XHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL3dhaXRGb3JSb2xlXCIsIENvbnRyb2xsZXIud2FpdGluZyk7XHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL3RlYWNoZXJQYWdlXCIsIENvbnRyb2xsZXIudGVhY2hlclBhZ2UpO1xyXG5zdHVkUm91dGVyLmdldChcIi9hZG1pblBhZ2VcIiwgQ29udHJvbGxlci5hZG1pblBhZ2UpO1xyXG5cclxuLy9yZWdpc3RyYXRpb25cclxuc3R1ZFJvdXRlci5wb3N0KFwiL2xvZ2luXCIsIHJlZ0NvbnRyb2xsZXIubG9nSW4pO1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvYWRkXCIsIHJlZ0NvbnRyb2xsZXIucmVnaXN0cmF0aW9uKTtcclxuXHJcbi8vb3RoZXIgZnVuY3Rpb25zXHJcbnN0dWRSb3V0ZXIucG9zdChcIi9lZGl0Um9sZXNcIiwgQ29udHJvbGxlci5lZGl0Um9sZXMpO1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvYWRkU3ViamVjdHNcIiwgQ29udHJvbGxlci5hZGRTdWJqZWN0cyk7XHJcbnN0dWRSb3V0ZXIucG9zdChcIi9yZW1vdmVTdWJqZWN0c1wiLCBDb250cm9sbGVyLnJlbW92ZVN1YmplY3RzKTtcclxuc3R1ZFJvdXRlci5wb3N0KFwiL2FkZFRvcGljc1wiLCBDb250cm9sbGVyLmFkZFRvcGljcyk7XHJcbnN0dWRSb3V0ZXIucG9zdChcIi9yZW1vdmVUb3BpY3NcIiwgQ29udHJvbGxlci5yZW1vdmVUb3BpY3MpO1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvZWRpdEFzc2Vzc21lbnRzUGFnZVwiLCBDb250cm9sbGVyLmVkaXRBc3Nlc3NtZW50c1BhZ2UpO1xyXG5cclxuc3R1ZFJvdXRlci5nZXQoXCIvZ2V0dFwiLCBDb250cm9sbGVyLmdldCk7XHJcbnN0dWRSb3V0ZXIuZGVsZXRlKFwiL2RlbGV0ZVwiLCBDb250cm9sbGVyLmRlbGV0ZUJ5SWQpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc3R1ZFJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "studRouter",
        "Router",
        "get",
        "Controller",
        "main",
        "regPage",
        "logInPage",
        "waiting",
        "teacherPage",
        "adminPage",
        "post",
        "regController",
        "logIn",
        "registration",
        "editRoles",
        "addSubjects",
        "removeSubjects",
        "addTopics",
        "removeTopics",
        "editAssessmentsPage",
        "deleteById"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,mBAAJ,EAAnB,C,CAEA;;AACAD,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWC,IAAnC;AACAJ,UAAU,CAACE,GAAX,CAAe,eAAf,EAAgCC,uBAAWE,OAA3C;AACAL,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BC,uBAAWG,SAAxC;AACAN,UAAU,CAACE,GAAX,CAAe,cAAf,EAA+BC,uBAAWI,OAA1C;AACAP,UAAU,CAACE,GAAX,CAAe,cAAf,EAA+BC,uBAAWK,WAA1C;AACAR,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BC,uBAAWM,SAAxC,E,CAEA;;AACAT,UAAU,CAACU,IAAX,CAAgB,QAAhB,EAA0BC,0BAAcC,KAAxC;AACAZ,UAAU,CAACU,IAAX,CAAgB,MAAhB,EAAwBC,0BAAcE,YAAtC,E,CAEA;;AACAb,UAAU,CAACU,IAAX,CAAgB,YAAhB,EAA8BP,uBAAWW,SAAzC;AACAd,UAAU,CAACU,IAAX,CAAgB,cAAhB,EAAgCP,uBAAWY,WAA3C;AACAf,UAAU,CAACU,IAAX,CAAgB,iBAAhB,EAAmCP,uBAAWa,cAA9C;AACAhB,UAAU,CAACU,IAAX,CAAgB,YAAhB,EAA8BP,uBAAWc,SAAzC;AACAjB,UAAU,CAACU,IAAX,CAAgB,eAAhB,EAAiCP,uBAAWe,YAA5C;AACAlB,UAAU,CAACU,IAAX,CAAgB,sBAAhB,EAAwCP,uBAAWgB,mBAAnD;AAEAnB,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWD,GAAnC;AACAF,UAAU,UAAV,CAAkB,SAAlB,EAA6BG,uBAAWiB,UAAxC;eAEepB,U",
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "sourcesContent": [
        "import Router from \"express\";\r\nimport Controller from \"./controller\";\r\nimport regController from \"./regController\";\r\n\r\nconst studRouter = new Router();\r\n\r\n//render\r\nstudRouter.get(\"/main\", Controller.main);\r\nstudRouter.get(\"/registration\", Controller.regPage);\r\nstudRouter.get(\"/loginPage\", Controller.logInPage);\r\nstudRouter.get(\"/waitForRole\", Controller.waiting);\r\nstudRouter.get(\"/teacherPage\", Controller.teacherPage);\r\nstudRouter.get(\"/adminPage\", Controller.adminPage);\r\n\r\n//registration\r\nstudRouter.post(\"/login\", regController.logIn);\r\nstudRouter.post(\"/add\", regController.registration);\r\n\r\n//other functions\r\nstudRouter.post(\"/editRoles\", Controller.editRoles);\r\nstudRouter.post(\"/addSubjects\", Controller.addSubjects);\r\nstudRouter.post(\"/removeSubjects\", Controller.removeSubjects);\r\nstudRouter.post(\"/addTopics\", Controller.addTopics);\r\nstudRouter.post(\"/removeTopics\", Controller.removeTopics);\r\nstudRouter.post(\"/editAssessmentsPage\", Controller.editAssessmentsPage);\r\n\r\nstudRouter.get(\"/gett\", Controller.get);\r\nstudRouter.delete(\"/delete\", Controller.deleteById);\r\n\r\nexport default studRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1592981262829
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\asdfg",
      "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\asdfg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = require(\"mongodb\");\n\nvar _model = _interopRequireDefault(require(\"./model\"));\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\nvar url = 'mongodb://localhost:27017';\nvar dbName = 'taskDB';\n\n_mongoose[\"default\"].connect(url + '/' + dbName);\n\nvar Controller = {\n  main: function main(req, res) {\n    res.render(\"main.ejs\");\n  },\n  regPage: function regPage(req, res) {\n    res.render(\"registration.ejs\");\n  },\n  logInPage: function logInPage(req, res) {\n    res.render(\"logIn.ejs\");\n  },\n  waiting: function waiting(req, res) {\n    res.send(\"<h1>You have no role still!</h1>\");\n  },\n  get: function get(request, response) {\n    _model[\"default\"].find().then(function (inf) {\n      response.send(inf);\n    })[\"catch\"](function (error) {\n      response.status(500).send(error);\n    });\n  },\n  teacherPage: function teacherPage(req, res) {\n    var cookie = req.cookies;\n\n    if (cookie && cookie.role == \"teacher\") {\n      return res.render(\"teacherPage.ejs\");\n    }\n\n    return res.send(\"You are not logged in!\");\n  },\n  editAssessmentsPage: function editAssessmentsPage(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n      if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n      if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n      if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n      return res.render(\"assessmentsPage.ejs\", {\n        data: {\n          data: inf,\n          subject: item.subject\n        }\n      });\n    });\n  },\n  adminPage: function adminPage(req, res) {\n    var cookie = req.cookies;\n\n    if (cookie && cookie.role == \"admin\") {\n      return res.render(\"admin.ejs\");\n    }\n\n    return res.send(\"You are not logged in!\");\n  },\n  editRoles: function editRoles(req, res) {\n    var item = req.body;\n\n    _model[\"default\"].find().then(function (db) {\n      var stud = [];\n      var teach = [];\n\n      if (item.students) {\n        if (typeof item.students == \"string\") {\n          item.students = [item.students];\n        }\n\n        var _iterator = _createForOfIteratorHelper(item.students),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var student = _step.value;\n\n            _model[\"default\"].findOneAndUpdate({\n              email: student\n            }, {\n              role: \"student\"\n            }, {\n              \"new\": true\n            }, function (error, user) {\n              if (error) return res.send(error);\n              if (user) stud.push(user.email);\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      if (item.teachers) {\n        if (typeof item.teachers == \"string\") {\n          item.teachers = [item.teachers];\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(item.teachers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var teacher = _step2.value;\n\n            _model[\"default\"].findOneAndUpdate({\n              email: teacher\n            }, {\n              role: \"teacher\"\n            }, {\n              \"new\": true\n            }, function (error, user) {\n              if (error) return res.send(error);\n              if (user) teach.push(user.email);\n            });\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      setTimeout(function () {\n        return res.render(\"changedUsers.ejs\", {\n          students: stud,\n          teachers: teach\n        });\n      }, 100);\n    });\n  },\n  addSubjects: function addSubjects(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\n    if (typeof item.subjects == \"string\") item.subjects = [item.subjects];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator3 = _createForOfIteratorHelper(inf),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var student = _step3.value;\n\n          var _iterator4 = _createForOfIteratorHelper(item.subjects),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var s = _step4.value;\n              if (!student.subjects.hasOwnProperty(s)) student.subjects[\"\".concat(s)] = {\n                topic1: 0\n              };\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findOneAndUpdate({\n            email: student.email\n          }, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  removeSubjects: function removeSubjects(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\n    if (typeof item.subjects == \"string\") item.subjects = [item.subjects];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator5 = _createForOfIteratorHelper(inf),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var student = _step5.value;\n\n          var _iterator6 = _createForOfIteratorHelper(item.subjects),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var s = _step6.value;\n              if (student.subjects.hasOwnProperty(s)) delete student.subjects[\"\".concat(s)];\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findOneAndUpdate({\n            email: student.email\n          }, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  addTopics: function addTopics(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\n    if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\n    if (typeof item.topics == \"string\") item.topics = [item.topics];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator7 = _createForOfIteratorHelper(inf),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var student = _step7.value;\n          if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\");\n\n          var _iterator8 = _createForOfIteratorHelper(item.topics),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var topic = _step8.value;\n              if (!student.subjects[\"\".concat(item.subject)].hasOwnProperty(topic)) student.subjects[\"\".concat(item.subject)][\"\".concat(topic)] = 0;\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n\n          delete student.subjects[\"\".concat(item.subject)][\"topic1\"];\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findByIdAndUpdate(student._id, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  removeTopics: function removeTopics(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\n    if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\n    if (typeof item.topics == \"string\") item.topics = [item.topics];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator9 = _createForOfIteratorHelper(inf),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var student = _step9.value;\n          if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\");\n\n          var _iterator10 = _createForOfIteratorHelper(item.topics),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var topic = _step10.value;\n              if (student.subjects[\"\".concat(item.subject)].hasOwnProperty(topic)) delete student.subjects[\"\".concat(item.subject)][\"\".concat(topic)];\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          if (Object.keys(student.subjects[\"\".concat(item.subject)]).length == 0) student.subjects[\"\".concat(item.subject)][\"topic1\"] = 0;\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findByIdAndUpdate(student._id, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  deleteById: function deleteById(req, res) {\n    if (req.query.id) {\n      _model[\"default\"].findByIdAndDelete(req.query.id).then(function (deleted) {\n        return res.send(deleted);\n      });\n    }\n  },\n  test: function test(req, res) {\n    res.render(\"test.ejs\", {\n      data: [\"a1\", \"a2\", \"a3\"]\n    });\n  },\n  test1: function test1(req, res) {\n    var data = req.body;\n    return res.send(data);\n  }\n};\nvar _default = Controller;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "mongoose",
        "set",
        "url",
        "dbName",
        "connect",
        "Controller",
        "main",
        "req",
        "res",
        "render",
        "regPage",
        "logInPage",
        "waiting",
        "send",
        "get",
        "request",
        "response",
        "users",
        "find",
        "then",
        "inf",
        "error",
        "status",
        "teacherPage",
        "cookie",
        "cookies",
        "role",
        "editAssessmentsPage",
        "item",
        "body",
        "grade",
        "parseInt",
        "data",
        "subject",
        "adminPage",
        "editRoles",
        "db",
        "stud",
        "teach",
        "students",
        "student",
        "findOneAndUpdate",
        "email",
        "user",
        "push",
        "teachers",
        "teacher",
        "setTimeout",
        "addSubjects",
        "subjects",
        "s",
        "hasOwnProperty",
        "topic1",
        "updatedUser",
        "removeSubjects",
        "addTopics",
        "topics",
        "topic",
        "findByIdAndUpdate",
        "_id",
        "removeTopics",
        "Object",
        "keys",
        "length",
        "deleteById",
        "query",
        "id",
        "findByIdAndDelete",
        "deleted",
        "test",
        "test1"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "sourcesContent": [
        "import { MongoClient, ObjectID } from 'mongodb';\r\nimport users from \"./model\";\r\nimport mongoose, { ConnectionStates } from \"mongoose\";\r\nmongoose.set('useFindAndModify', false);\r\n\r\nconst url = 'mongodb://localhost:27017';\r\nconst dbName = 'taskDB';\r\nmongoose.connect(url + '/' + dbName);\r\n\r\nconst Controller = {\r\n    main: function (req, res) {\r\n        res.render(\"main.ejs\")\r\n    },\r\n\r\n    regPage: function (req, res) {\r\n        res.render(\"registration.ejs\");\r\n    },\r\n\r\n    logInPage: function (req, res) {\r\n        res.render(\"logIn.ejs\")\r\n    },\r\n\r\n    waiting: function (req, res) {\r\n        res.send(\"<h1>You have no role still!</h1>\");\r\n    },\r\n\r\n    get: function (request, response) {\r\n        users.find()\r\n            .then(inf => {\r\n                response.send(inf);\r\n            })\r\n            .catch(\r\n                error => {\r\n                    response.status(500).send(error);\r\n                }\r\n            );\r\n    },\r\n\r\n    teacherPage: function (req, res) {\r\n        let cookie = req.cookies;\r\n        if (cookie && cookie.role == \"teacher\") {\r\n            return res.render(\"teacherPage.ejs\");\r\n        }\r\n        return res.send(\"You are not logged in!\");\r\n\r\n    },\r\n\r\n    editAssessmentsPage: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        users.find({ grade: grade }).then(inf => {\r\n            if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n            if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n            if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n            if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n            return res.render(\"assessmentsPage.ejs\", { data: { data: inf, subject: item.subject } });\r\n        });\r\n    },\r\n\r\n    adminPage: function (req, res) {\r\n        let cookie = req.cookies;\r\n        if (cookie && cookie.role == \"admin\") {\r\n            return res.render(\"admin.ejs\");\r\n        }\r\n        return res.send(\"You are not logged in!\");\r\n    },\r\n\r\n    editRoles: function (req, res) {\r\n        let item = req.body;\r\n        users.find().then(db => {\r\n            let stud = [];\r\n            let teach = [];\r\n            if (item.students) {\r\n                if (typeof (item.students) == \"string\") {\r\n                    item.students = [item.students];\r\n                }\r\n                for (let student of item.students) {\r\n                    users.findOneAndUpdate({ email: student }, { role: \"student\" }, { new: true }, function (error, user) {\r\n                        if (error) return res.send(error);\r\n                        if (user) stud.push(user.email);\r\n                    });\r\n                }\r\n            }\r\n            if (item.teachers) {\r\n                if (typeof (item.teachers) == \"string\") {\r\n                    item.teachers = [item.teachers];\r\n                }\r\n                for (let teacher of item.teachers) {\r\n                    users.findOneAndUpdate({ email: teacher }, { role: \"teacher\" }, { new: true }, function (error, user) {\r\n                        if (error) return res.send(error);\r\n                        if (user) teach.push(user.email);\r\n                    });\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                return res.render(\"changedUsers.ejs\", { students: stud, teachers: teach });\r\n            }, 100)\r\n        });\r\n    },\r\n\r\n    addSubjects: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\r\n        if (typeof (item.subjects) == \"string\") item.subjects = [item.subjects];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                for (let s of item.subjects) {\r\n                    if (!student.subjects.hasOwnProperty(s))\r\n                        student.subjects[`${s}`] = { topic1: 0 };\r\n                }\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findOneAndUpdate({ email: student.email }, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error)\r\n                })\r\n            }\r\n            return res.send(inf)\r\n        })\r\n    },\r\n\r\n    removeSubjects: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\r\n        if (typeof (item.subjects) == \"string\") item.subjects = [item.subjects];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                for (let s of item.subjects) {\r\n                    if (student.subjects.hasOwnProperty(s))\r\n                        delete student.subjects[`${s}`];\r\n                }\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findOneAndUpdate({ email: student.email }, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error)\r\n                });\r\n            }\r\n            return res.send(inf)\r\n        });\r\n    },\r\n\r\n    addTopics: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\r\n        if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\r\n        if (typeof (item.topics) == \"string\") item.topics = [item.topics];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\")\r\n                for (let topic of item.topics) {\r\n                    if (!student.subjects[`${item.subject}`].hasOwnProperty(topic))\r\n                        student.subjects[`${item.subject}`][`${topic}`] = 0;\r\n                }\r\n                delete student.subjects[`${item.subject}`][\"topic1\"]\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findByIdAndUpdate(student._id, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error);\r\n                })\r\n            }\r\n            return res.send(inf);\r\n        })\r\n    },\r\n\r\n    removeTopics: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\r\n        if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\r\n        if (typeof (item.topics) == \"string\") item.topics = [item.topics];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\")\r\n                for (let topic of item.topics) {\r\n                    if (student.subjects[`${item.subject}`].hasOwnProperty(topic))\r\n                        delete student.subjects[`${item.subject}`][`${topic}`];\r\n                }\r\n                if (Object.keys(student.subjects[`${item.subject}`]).length == 0)\r\n                    student.subjects[`${item.subject}`][\"topic1\"] = 0;\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findByIdAndUpdate(student._id, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error);\r\n                })\r\n            }\r\n            return res.send(inf);\r\n        })\r\n    },\r\n\r\n    deleteById: function (req, res) {\r\n        if (req.query.id) {\r\n            users.findByIdAndDelete(req.query.id).then((deleted) => {\r\n                return res.send(deleted);\r\n            });\r\n        }\r\n    },\r\n\r\n    test: (req, res) => {\r\n        res.render(\"test.ejs\", { data: [\"a1\", \"a2\", \"a3\"] });\r\n    },\r\n\r\n    test1: (req, res) => {\r\n        let data = req.body;\r\n        return res.send(data)\r\n    }\r\n}\r\n\r\nexport default Controller;"
      ]
    },
    "sourceType": "script",
    "mtime": 1592980548515
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\asdfg",
      "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\asdfg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\model.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
        "sourceFileName": "model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar ProfileSchema = new _mongoose.Schema({\n  email: String,\n  password: String,\n  fullName: String,\n  grade: {\n    type: Number,\n    \"default\": 0\n  },\n  role: {\n    type: String,\n    \"default\": \"\"\n  },\n  subjects: {\n    type: Object,\n    \"default\": {\n      type: Object\n    }\n  }\n});\nvar users = (0, _mongoose.model)(\"task\", ProfileSchema);\nvar _default = users;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsLmpzIl0sIm5hbWVzIjpbIlByb2ZpbGVTY2hlbWEiLCJTY2hlbWEiLCJlbWFpbCIsIlN0cmluZyIsInBhc3N3b3JkIiwiZnVsbE5hbWUiLCJncmFkZSIsInR5cGUiLCJOdW1iZXIiLCJyb2xlIiwic3ViamVjdHMiLCJPYmplY3QiLCJ1c2VycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLGFBQWEsR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzdCQyxFQUFBQSxLQUFLLEVBQUVDLE1BRHNCO0FBRTdCQyxFQUFBQSxRQUFRLEVBQUVELE1BRm1CO0FBRzdCRSxFQUFBQSxRQUFRLEVBQUVGLE1BSG1CO0FBSTdCRyxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUgsZUFBUztBQUZOLEdBSnNCO0FBUTdCQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkYsSUFBQUEsSUFBSSxFQUFFSixNQURKO0FBRUYsZUFBUztBQUZQLEdBUnVCO0FBWTdCTyxFQUFBQSxRQUFRLEVBQUU7QUFDTkgsSUFBQUEsSUFBSSxFQUFFSSxNQURBO0FBRU4sZUFBUztBQUNMSixNQUFBQSxJQUFJLEVBQUVJO0FBREQ7QUFGSDtBQVptQixDQUFYLENBQXRCO0FBb0JBLElBQU1DLEtBQUssR0FBRyxxQkFBTSxNQUFOLEVBQWNaLGFBQWQsQ0FBZDtlQUVlWSxLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxcYXNkZmdcXHNyY1xcYXBpXFxjb250cm9sbGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XHJcblxyXG5jb25zdCBQcm9maWxlU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgcGFzc3dvcmQ6IFN0cmluZyxcclxuICAgIGZ1bGxOYW1lOiBTdHJpbmcsXHJcbiAgICBncmFkZToge1xyXG4gICAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgICBkZWZhdWx0OiAwXHJcbiAgICB9LFxyXG4gICAgcm9sZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICBkZWZhdWx0OiBcIlwiXHJcbiAgICB9LFxyXG4gICAgc3ViamVjdHM6IHtcclxuICAgICAgICB0eXBlOiBPYmplY3QsXHJcbiAgICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgICAgICB0eXBlOiBPYmplY3RcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0pXHJcblxyXG5jb25zdCB1c2VycyA9IG1vZGVsKFwidGFza1wiLCBQcm9maWxlU2NoZW1hKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZXJzO1xyXG5cclxuXHJcblxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "model.js"
      ],
      "names": [
        "ProfileSchema",
        "Schema",
        "email",
        "String",
        "password",
        "fullName",
        "grade",
        "type",
        "Number",
        "role",
        "subjects",
        "Object",
        "users"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,gBAAJ,CAAW;AAC7BC,EAAAA,KAAK,EAAEC,MADsB;AAE7BC,EAAAA,QAAQ,EAAED,MAFmB;AAG7BE,EAAAA,QAAQ,EAAEF,MAHmB;AAI7BG,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEC,MADH;AAEH,eAAS;AAFN,GAJsB;AAQ7BC,EAAAA,IAAI,EAAE;AACFF,IAAAA,IAAI,EAAEJ,MADJ;AAEF,eAAS;AAFP,GARuB;AAY7BO,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEI,MADA;AAEN,eAAS;AACLJ,MAAAA,IAAI,EAAEI;AADD;AAFH;AAZmB,CAAX,CAAtB;AAoBA,IAAMC,KAAK,GAAG,qBAAM,MAAN,EAAcZ,aAAd,CAAd;eAEeY,K",
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "sourcesContent": [
        "import { Schema, model } from \"mongoose\";\r\n\r\nconst ProfileSchema = new Schema({\r\n    email: String,\r\n    password: String,\r\n    fullName: String,\r\n    grade: {\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    role: {\r\n        type: String,\r\n        default: \"\"\r\n    },\r\n    subjects: {\r\n        type: Object,\r\n        default: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\n\r\nconst users = model(\"task\", ProfileSchema);\r\n\r\nexport default users;\r\n\r\n\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591812158848
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\\\\src\\\\api\\\\controller\\\\regController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\asdfg\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\asdfg",
      "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\regController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\asdfg",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\regController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\regController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
        "sourceFileName": "regController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = require(\"mongodb\");\n\nvar _model = _interopRequireDefault(require(\"./model\"));\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\nvar url = 'mongodb://localhost:27017';\nvar dbName = 'taskDB';\n\n_mongoose[\"default\"].connect(url + '/' + dbName);\n\nvar regController = {\n  registration: function registration(request, response) {\n    var newItem = new _model[\"default\"](request.body);\n    var check = true;\n\n    _model[\"default\"].find().then(function (inf) {\n      for (var i = 0; i < inf.length; i++) {\n        if (newItem.email == inf[i].email) {\n          check = false;\n          break;\n        }\n      }\n\n      if (!newItem.email) return response.status(401).send(\"You did not enter an email!\");\n      if (!newItem.password) return response.status(401).send(\"You did not enter a password!\");\n      var grade = newItem.grade;\n\n      if (grade) {\n        if (typeof grade != \"number\") return response.status(401).send(\"A grade must be a number!\");\n        if ((grade ^ 0) !== grade) return response.status(401).send(\"A grade must be integer!\");\n        if (grade > 11 || grade < 1) return response.status(401).send(\"A grade must be between 1 and 12!\");\n      }\n\n      if (!newItem.fullName) return response.status(401).send(\"You did not enter your name!\");\n      if (inf.length == 0) newItem.role = \"admin\";\n      if (check) newItem.save().then(function (user) {\n        return response.render(\"waitForRole.ejs\");\n      });else return response.status(401).send(\"This email has already been taken!!!\");\n    });\n  },\n  logIn: function logIn(req, res) {\n    var item = req.body;\n    if (!item.email) return res.status(400).send(\"You did not enter an email!\");\n    if (!item.password) return res.status(400).send(\"You did not enter a password!\");\n\n    _model[\"default\"].findOne({\n      email: item.email,\n      password: item.password\n    }).then(function (inf) {\n      if (!inf) return res.status(400).send(\"Check your password or email!!!\");\n      if (inf.role == \"\") return res.render(\"waitForRole.ejs\");\n\n      if (inf.role == \"student\") {\n        res.cookie(\"role\", \"student\");\n        return res.render(\"studentSubjects.ejs\", {\n          data: inf.subjects\n        });\n      }\n\n      if (inf.role == \"teacher\") {\n        res.cookie(\"role\", \"teacher\");\n        return res.redirect(\"/teacherPage\");\n      }\n\n      if (inf.role == \"admin\") {\n        res.cookie(\"role\", \"admin\");\n        return res.redirect(\"/adminPage\");\n      } else return res.send(inf);\n    });\n  }\n};\nvar _default = regController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "regController.js"
      ],
      "names": [
        "mongoose",
        "set",
        "url",
        "dbName",
        "connect",
        "regController",
        "registration",
        "request",
        "response",
        "newItem",
        "users",
        "body",
        "check",
        "find",
        "then",
        "inf",
        "i",
        "length",
        "email",
        "status",
        "send",
        "password",
        "grade",
        "fullName",
        "role",
        "save",
        "user",
        "render",
        "logIn",
        "req",
        "res",
        "item",
        "findOne",
        "cookie",
        "data",
        "subjects",
        "redirect"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\User\\Desktop\\asdfg\\src\\api\\controller\\",
      "sourcesContent": [
        "import { MongoClient, ObjectID } from 'mongodb';\r\nimport users from \"./model\";\r\nimport mongoose, { ConnectionStates } from \"mongoose\";\r\nmongoose.set('useFindAndModify', false);\r\n\r\nconst url = 'mongodb://localhost:27017';\r\nconst dbName = 'taskDB';\r\nmongoose.connect(url + '/' + dbName);\r\n\r\nconst regController = {\r\n    registration: function (request, response) {\r\n        const newItem = new users(request.body);\r\n        let check = true;\r\n        users.find().then((inf) => {\r\n            for (let i = 0; i < inf.length; i++) {\r\n                if (newItem.email == inf[i].email) { check = false; break; }\r\n            }\r\n            if (!newItem.email) return response.status(401).send(\"You did not enter an email!\");\r\n            if (!newItem.password) return response.status(401).send(\"You did not enter a password!\");\r\n            let grade = newItem.grade;\r\n            if (grade) {\r\n                if (typeof (grade) != \"number\") return response.status(401).send(\"A grade must be a number!\");\r\n                if ((grade ^ 0) !== grade) return response.status(401).send(\"A grade must be integer!\");\r\n                if (grade > 11 || grade < 1) return response.status(401).send(\"A grade must be between 1 and 12!\");\r\n            }\r\n            if (!newItem.fullName) return response.status(401).send(\"You did not enter your name!\");\r\n            if (inf.length == 0) newItem.role = \"admin\";\r\n            if (check)\r\n                newItem.save().then(user => {\r\n                    return response.render(\"waitForRole.ejs\")\r\n                })\r\n            else return response.status(401).send(\"This email has already been taken!!!\")\r\n        });\r\n    },\r\n\r\n    logIn: function (req, res) {\r\n        let item = req.body;\r\n        if (!item.email) return res.status(400).send(\"You did not enter an email!\");\r\n        if (!item.password) return res.status(400).send(\"You did not enter a password!\");\r\n        users.findOne({ email: item.email, password: item.password }).then(inf => {\r\n            if (!inf) return res.status(400).send(\"Check your password or email!!!\");\r\n            if (inf.role == \"\") return res.render(\"waitForRole.ejs\");\r\n            if (inf.role == \"student\") {\r\n                res.cookie(\"role\", \"student\");\r\n                return res.render(\"studentSubjects.ejs\", { data: inf.subjects });\r\n            }\r\n            if (inf.role == \"teacher\") {\r\n                res.cookie(\"role\", \"teacher\");\r\n                return res.redirect(\"/teacherPage\");\r\n            }\r\n            if (inf.role == \"admin\") {\r\n                res.cookie(\"role\", \"admin\");\r\n                return res.redirect(\"/adminPage\");\r\n            }\r\n            else return res.send(inf)\r\n        });\r\n\r\n    },\r\n}\r\n\r\nexport default regController;"
      ]
    },
    "sourceType": "script",
    "mtime": 1592734720565
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _api = _interopRequireDefault(require(\"./api\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"].urlencoded());\napp.use((0, _cookieParser[\"default\"])());\napp.use(\"/\", _api[\"default\"]);\napp.listen(4000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsInVybGVuY29kZWQiLCJhcGlSb3V0ZXIiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxHQUFHLEdBQUcsMEJBQVY7QUFFQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRQyxJQUFSLEVBQVI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVFDLG9CQUFRRSxVQUFSLEVBQVI7QUFDQUosR0FBRyxDQUFDQyxHQUFKLENBQVEsK0JBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhSSxlQUFiO0FBRUFMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLElBQVgiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFzQv9GA0LDQutGC0LjQutCwMVxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgYXBpUm91dGVyIGZyb20gJy4vYXBpJztcclxuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tIFwiY29va2llLXBhcnNlclwiO1xyXG5cclxubGV0IGFwcCA9IGV4cHJlc3MoKTtcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCgpKTtcclxuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XHJcbmFwcC51c2UoXCIvXCIsIGFwaVJvdXRlcilcclxuXHJcbmFwcC5saXN0ZW4oNDAwMCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "use",
        "express",
        "json",
        "urlencoded",
        "apiRouter",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,GAAG,GAAG,0BAAV;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,oBAAQE,UAAR,EAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQ,+BAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaI,eAAb;AAEAL,GAAG,CAACM,MAAJ,CAAW,IAAX",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\",
      "sourcesContent": [
        "import express from \"express\";\r\nimport apiRouter from './api';\r\nimport cookieParser from \"cookie-parser\";\r\n\r\nlet app = express();\r\n\r\napp.use(express.json());\r\napp.use(express.urlencoded());\r\napp.use(cookieParser());\r\napp.use(\"/\", apiRouter)\r\n\r\napp.listen(4000);"
      ]
    },
    "sourceType": "script",
    "mtime": 1592982084494
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _controller = _interopRequireDefault(require(\"./controllers/controller\"));\n\nvar _regController = _interopRequireDefault(require(\"./controllers/regController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar apiRouter = new _express.Router();\napiRouter.get(\"/main\", _controller[\"default\"].main);\napiRouter.get(\"/allUsers\", _controller[\"default\"].allUsers); //Registration and authorization\n\napiRouter.get(\"/registrationPage\", _controller[\"default\"].registrationPage);\napiRouter.post(\"/registration\", _regController[\"default\"].registration);\napiRouter.post(\"/login\", _regController[\"default\"].logIn);\napiRouter.get(\"/logOut\", _regController[\"default\"].logOut);\napiRouter.get(\"/userPage\", _controller[\"default\"].userPage); //Quations\n\napiRouter.post(\"/newQuation\", _controller[\"default\"].newQuation);\napiRouter.post(\"/addAnswer\", _controller[\"default\"].addAnswer);\napiRouter.get(\"/allQuations\", _controller[\"default\"].allQuations);\napiRouter.post(\"/quationPage\", _controller[\"default\"].quationPage);\napiRouter[\"delete\"](\"/\", _regController[\"default\"].deleteById);\nvar _default = apiRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwaVJvdXRlciIsIlJvdXRlciIsImdldCIsIkNvbnRyb2xsZXIiLCJtYWluIiwiYWxsVXNlcnMiLCJyZWdpc3RyYXRpb25QYWdlIiwicG9zdCIsInJlZ0NvbnRyb2xsZXIiLCJyZWdpc3RyYXRpb24iLCJsb2dJbiIsImxvZ091dCIsInVzZXJQYWdlIiwibmV3UXVhdGlvbiIsImFkZEFuc3dlciIsImFsbFF1YXRpb25zIiwicXVhdGlvblBhZ2UiLCJkZWxldGVCeUlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxTQUFTLEdBQUcsSUFBSUMsZUFBSixFQUFsQjtBQUVBRCxTQUFTLENBQUNFLEdBQVYsQ0FBYyxPQUFkLEVBQXVCQyx1QkFBV0MsSUFBbEM7QUFDQUosU0FBUyxDQUFDRSxHQUFWLENBQWMsV0FBZCxFQUEyQkMsdUJBQVdFLFFBQXRDLEUsQ0FFQTs7QUFDQUwsU0FBUyxDQUFDRSxHQUFWLENBQWMsbUJBQWQsRUFBbUNDLHVCQUFXRyxnQkFBOUM7QUFDQU4sU0FBUyxDQUFDTyxJQUFWLENBQWUsZUFBZixFQUFnQ0MsMEJBQWNDLFlBQTlDO0FBQ0FULFNBQVMsQ0FBQ08sSUFBVixDQUFlLFFBQWYsRUFBeUJDLDBCQUFjRSxLQUF2QztBQUNBVixTQUFTLENBQUNFLEdBQVYsQ0FBYyxTQUFkLEVBQXlCTSwwQkFBY0csTUFBdkM7QUFFQVgsU0FBUyxDQUFDRSxHQUFWLENBQWMsV0FBZCxFQUEyQkMsdUJBQVdTLFFBQXRDLEUsQ0FFQTs7QUFDQVosU0FBUyxDQUFDTyxJQUFWLENBQWUsYUFBZixFQUE4QkosdUJBQVdVLFVBQXpDO0FBQ0FiLFNBQVMsQ0FBQ08sSUFBVixDQUFlLFlBQWYsRUFBNkJKLHVCQUFXVyxTQUF4QztBQUNBZCxTQUFTLENBQUNFLEdBQVYsQ0FBYyxjQUFkLEVBQThCQyx1QkFBV1ksV0FBekM7QUFDQWYsU0FBUyxDQUFDTyxJQUFWLENBQWUsY0FBZixFQUErQkosdUJBQVdhLFdBQTFDO0FBRUFoQixTQUFTLFVBQVQsQ0FBaUIsR0FBakIsRUFBc0JRLDBCQUFjUyxVQUFwQztlQUllakIsUyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFVzZXJcXERlc2t0b3BcXNC/0YDQsNC60YLQuNC60LAxXFxzcmNcXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIjtcclxuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSBcIi4vY29udHJvbGxlcnMvY29udHJvbGxlclwiO1xyXG5pbXBvcnQgcmVnQ29udHJvbGxlciBmcm9tIFwiLi9jb250cm9sbGVycy9yZWdDb250cm9sbGVyXCI7XHJcbmNvbnN0IGFwaVJvdXRlciA9IG5ldyBSb3V0ZXIoKTtcclxuXHJcbmFwaVJvdXRlci5nZXQoXCIvbWFpblwiLCBDb250cm9sbGVyLm1haW4pO1xyXG5hcGlSb3V0ZXIuZ2V0KFwiL2FsbFVzZXJzXCIsIENvbnRyb2xsZXIuYWxsVXNlcnMpXHJcblxyXG4vL1JlZ2lzdHJhdGlvbiBhbmQgYXV0aG9yaXphdGlvblxyXG5hcGlSb3V0ZXIuZ2V0KFwiL3JlZ2lzdHJhdGlvblBhZ2VcIiwgQ29udHJvbGxlci5yZWdpc3RyYXRpb25QYWdlKTtcclxuYXBpUm91dGVyLnBvc3QoXCIvcmVnaXN0cmF0aW9uXCIsIHJlZ0NvbnRyb2xsZXIucmVnaXN0cmF0aW9uKTtcclxuYXBpUm91dGVyLnBvc3QoXCIvbG9naW5cIiwgcmVnQ29udHJvbGxlci5sb2dJbik7XHJcbmFwaVJvdXRlci5nZXQoXCIvbG9nT3V0XCIsIHJlZ0NvbnRyb2xsZXIubG9nT3V0KTtcclxuXHJcbmFwaVJvdXRlci5nZXQoXCIvdXNlclBhZ2VcIiwgQ29udHJvbGxlci51c2VyUGFnZSk7XHJcblxyXG4vL1F1YXRpb25zXHJcbmFwaVJvdXRlci5wb3N0KFwiL25ld1F1YXRpb25cIiwgQ29udHJvbGxlci5uZXdRdWF0aW9uKTtcclxuYXBpUm91dGVyLnBvc3QoXCIvYWRkQW5zd2VyXCIsIENvbnRyb2xsZXIuYWRkQW5zd2VyKTtcclxuYXBpUm91dGVyLmdldChcIi9hbGxRdWF0aW9uc1wiLCBDb250cm9sbGVyLmFsbFF1YXRpb25zKTtcclxuYXBpUm91dGVyLnBvc3QoXCIvcXVhdGlvblBhZ2VcIiwgQ29udHJvbGxlci5xdWF0aW9uUGFnZSk7XHJcblxyXG5hcGlSb3V0ZXIuZGVsZXRlKFwiL1wiLCByZWdDb250cm9sbGVyLmRlbGV0ZUJ5SWQpO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcGlSb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "apiRouter",
        "Router",
        "get",
        "Controller",
        "main",
        "allUsers",
        "registrationPage",
        "post",
        "regController",
        "registration",
        "logIn",
        "logOut",
        "userPage",
        "newQuation",
        "addAnswer",
        "allQuations",
        "quationPage",
        "deleteById"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AACA,IAAMA,SAAS,GAAG,IAAIC,eAAJ,EAAlB;AAEAD,SAAS,CAACE,GAAV,CAAc,OAAd,EAAuBC,uBAAWC,IAAlC;AACAJ,SAAS,CAACE,GAAV,CAAc,WAAd,EAA2BC,uBAAWE,QAAtC,E,CAEA;;AACAL,SAAS,CAACE,GAAV,CAAc,mBAAd,EAAmCC,uBAAWG,gBAA9C;AACAN,SAAS,CAACO,IAAV,CAAe,eAAf,EAAgCC,0BAAcC,YAA9C;AACAT,SAAS,CAACO,IAAV,CAAe,QAAf,EAAyBC,0BAAcE,KAAvC;AACAV,SAAS,CAACE,GAAV,CAAc,SAAd,EAAyBM,0BAAcG,MAAvC;AAEAX,SAAS,CAACE,GAAV,CAAc,WAAd,EAA2BC,uBAAWS,QAAtC,E,CAEA;;AACAZ,SAAS,CAACO,IAAV,CAAe,aAAf,EAA8BJ,uBAAWU,UAAzC;AACAb,SAAS,CAACO,IAAV,CAAe,YAAf,EAA6BJ,uBAAWW,SAAxC;AACAd,SAAS,CAACE,GAAV,CAAc,cAAd,EAA8BC,uBAAWY,WAAzC;AACAf,SAAS,CAACO,IAAV,CAAe,cAAf,EAA+BJ,uBAAWa,WAA1C;AAEAhB,SAAS,UAAT,CAAiB,GAAjB,EAAsBQ,0BAAcS,UAApC;eAIejB,S",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport Controller from \"./controllers/controller\";\r\nimport regController from \"./controllers/regController\";\r\nconst apiRouter = new Router();\r\n\r\napiRouter.get(\"/main\", Controller.main);\r\napiRouter.get(\"/allUsers\", Controller.allUsers)\r\n\r\n//Registration and authorization\r\napiRouter.get(\"/registrationPage\", Controller.registrationPage);\r\napiRouter.post(\"/registration\", regController.registration);\r\napiRouter.post(\"/login\", regController.logIn);\r\napiRouter.get(\"/logOut\", regController.logOut);\r\n\r\napiRouter.get(\"/userPage\", Controller.userPage);\r\n\r\n//Quations\r\napiRouter.post(\"/newQuation\", Controller.newQuation);\r\napiRouter.post(\"/addAnswer\", Controller.addAnswer);\r\napiRouter.get(\"/allQuations\", Controller.allQuations);\r\napiRouter.post(\"/quationPage\", Controller.quationPage);\r\n\r\napiRouter.delete(\"/\", regController.deleteById);\r\n\r\n\r\n\r\nexport default apiRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1593590248797
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _controller = _interopRequireDefault(require(\"./controller\"));\n\nvar _regController = _interopRequireDefault(require(\"./regController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar studRouter = new _express[\"default\"]();\nstudRouter.get(\"/test\", _controller[\"default\"].test);\nstudRouter.post(\"/test1\", _controller[\"default\"].test1); //render\n\nstudRouter.get(\"/main\", _controller[\"default\"].main);\nstudRouter.get(\"/registration\", _controller[\"default\"].regPage);\nstudRouter.get(\"/loginPage\", _controller[\"default\"].logInPage);\nstudRouter.get(\"/waitForRole\", _controller[\"default\"].waiting);\nstudRouter.get(\"/teacherPage\", _controller[\"default\"].teacherPage);\nstudRouter.get(\"/adminPage\", _controller[\"default\"].adminPage); //registration\n\nstudRouter.post(\"/login\", _regController[\"default\"].logIn);\nstudRouter.post(\"/add\", _regController[\"default\"].registration); //other functions\n\nstudRouter.post(\"/editRoles\", _controller[\"default\"].editRoles);\nstudRouter.post(\"/addSubjects\", _controller[\"default\"].addSubjects);\nstudRouter.post(\"/removeSubjects\", _controller[\"default\"].removeSubjects);\nstudRouter.post(\"/addTopics\", _controller[\"default\"].addTopics);\nstudRouter.post(\"/removeTopics\", _controller[\"default\"].removeTopics);\nstudRouter.post(\"/editAssessmentsPage\", _controller[\"default\"].editAssessmentsPage);\nstudRouter.get(\"/gett\", _controller[\"default\"].get);\nstudRouter[\"delete\"](\"/delete\", _controller[\"default\"].deleteById);\nvar _default = studRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInN0dWRSb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJDb250cm9sbGVyIiwidGVzdCIsInBvc3QiLCJ0ZXN0MSIsIm1haW4iLCJyZWdQYWdlIiwibG9nSW5QYWdlIiwid2FpdGluZyIsInRlYWNoZXJQYWdlIiwiYWRtaW5QYWdlIiwicmVnQ29udHJvbGxlciIsImxvZ0luIiwicmVnaXN0cmF0aW9uIiwiZWRpdFJvbGVzIiwiYWRkU3ViamVjdHMiLCJyZW1vdmVTdWJqZWN0cyIsImFkZFRvcGljcyIsInJlbW92ZVRvcGljcyIsImVkaXRBc3Nlc3NtZW50c1BhZ2UiLCJkZWxldGVCeUlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsSUFBSUMsbUJBQUosRUFBbkI7QUFFQUQsVUFBVSxDQUFDRSxHQUFYLENBQWUsT0FBZixFQUF3QkMsdUJBQVdDLElBQW5DO0FBQ0FKLFVBQVUsQ0FBQ0ssSUFBWCxDQUFnQixRQUFoQixFQUEwQkYsdUJBQVdHLEtBQXJDLEUsQ0FFQTs7QUFDQU4sVUFBVSxDQUFDRSxHQUFYLENBQWUsT0FBZixFQUF3QkMsdUJBQVdJLElBQW5DO0FBQ0FQLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLGVBQWYsRUFBZ0NDLHVCQUFXSyxPQUEzQztBQUNBUixVQUFVLENBQUNFLEdBQVgsQ0FBZSxZQUFmLEVBQTZCQyx1QkFBV00sU0FBeEM7QUFDQVQsVUFBVSxDQUFDRSxHQUFYLENBQWUsY0FBZixFQUErQkMsdUJBQVdPLE9BQTFDO0FBQ0FWLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLGNBQWYsRUFBK0JDLHVCQUFXUSxXQUExQztBQUNBWCxVQUFVLENBQUNFLEdBQVgsQ0FBZSxZQUFmLEVBQTZCQyx1QkFBV1MsU0FBeEMsRSxDQUVBOztBQUNBWixVQUFVLENBQUNLLElBQVgsQ0FBZ0IsUUFBaEIsRUFBMEJRLDBCQUFjQyxLQUF4QztBQUNBZCxVQUFVLENBQUNLLElBQVgsQ0FBZ0IsTUFBaEIsRUFBd0JRLDBCQUFjRSxZQUF0QyxFLENBRUE7O0FBQ0FmLFVBQVUsQ0FBQ0ssSUFBWCxDQUFnQixZQUFoQixFQUE4QkYsdUJBQVdhLFNBQXpDO0FBQ0FoQixVQUFVLENBQUNLLElBQVgsQ0FBZ0IsY0FBaEIsRUFBZ0NGLHVCQUFXYyxXQUEzQztBQUNBakIsVUFBVSxDQUFDSyxJQUFYLENBQWdCLGlCQUFoQixFQUFtQ0YsdUJBQVdlLGNBQTlDO0FBQ0FsQixVQUFVLENBQUNLLElBQVgsQ0FBZ0IsWUFBaEIsRUFBOEJGLHVCQUFXZ0IsU0FBekM7QUFDQW5CLFVBQVUsQ0FBQ0ssSUFBWCxDQUFnQixlQUFoQixFQUFpQ0YsdUJBQVdpQixZQUE1QztBQUNBcEIsVUFBVSxDQUFDSyxJQUFYLENBQWdCLHNCQUFoQixFQUF3Q0YsdUJBQVdrQixtQkFBbkQ7QUFFQXJCLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLE9BQWYsRUFBd0JDLHVCQUFXRCxHQUFuQztBQUNBRixVQUFVLFVBQVYsQ0FBa0IsU0FBbEIsRUFBNkJHLHVCQUFXbUIsVUFBeEM7ZUFFZXRCLFUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFzQv9GA0LDQutGC0LjQutCwMVxcc3JjXFxhcGlcXGNvbnRyb2xsZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSb3V0ZXIgZnJvbSBcImV4cHJlc3NcIjtcclxuaW1wb3J0IENvbnRyb2xsZXIgZnJvbSBcIi4vY29udHJvbGxlclwiO1xyXG5pbXBvcnQgcmVnQ29udHJvbGxlciBmcm9tIFwiLi9yZWdDb250cm9sbGVyXCI7XHJcblxyXG5jb25zdCBzdHVkUm91dGVyID0gbmV3IFJvdXRlcigpO1xyXG5cclxuc3R1ZFJvdXRlci5nZXQoXCIvdGVzdFwiLCBDb250cm9sbGVyLnRlc3QpO1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvdGVzdDFcIiwgQ29udHJvbGxlci50ZXN0MSk7XHJcblxyXG4vL3JlbmRlclxyXG5zdHVkUm91dGVyLmdldChcIi9tYWluXCIsIENvbnRyb2xsZXIubWFpbik7XHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL3JlZ2lzdHJhdGlvblwiLCBDb250cm9sbGVyLnJlZ1BhZ2UpO1xyXG5zdHVkUm91dGVyLmdldChcIi9sb2dpblBhZ2VcIiwgQ29udHJvbGxlci5sb2dJblBhZ2UpO1xyXG5zdHVkUm91dGVyLmdldChcIi93YWl0Rm9yUm9sZVwiLCBDb250cm9sbGVyLndhaXRpbmcpO1xyXG5zdHVkUm91dGVyLmdldChcIi90ZWFjaGVyUGFnZVwiLCBDb250cm9sbGVyLnRlYWNoZXJQYWdlKTtcclxuc3R1ZFJvdXRlci5nZXQoXCIvYWRtaW5QYWdlXCIsIENvbnRyb2xsZXIuYWRtaW5QYWdlKTtcclxuXHJcbi8vcmVnaXN0cmF0aW9uXHJcbnN0dWRSb3V0ZXIucG9zdChcIi9sb2dpblwiLCByZWdDb250cm9sbGVyLmxvZ0luKTtcclxuc3R1ZFJvdXRlci5wb3N0KFwiL2FkZFwiLCByZWdDb250cm9sbGVyLnJlZ2lzdHJhdGlvbik7XHJcblxyXG4vL290aGVyIGZ1bmN0aW9uc1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvZWRpdFJvbGVzXCIsIENvbnRyb2xsZXIuZWRpdFJvbGVzKTtcclxuc3R1ZFJvdXRlci5wb3N0KFwiL2FkZFN1YmplY3RzXCIsIENvbnRyb2xsZXIuYWRkU3ViamVjdHMpO1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvcmVtb3ZlU3ViamVjdHNcIiwgQ29udHJvbGxlci5yZW1vdmVTdWJqZWN0cyk7XHJcbnN0dWRSb3V0ZXIucG9zdChcIi9hZGRUb3BpY3NcIiwgQ29udHJvbGxlci5hZGRUb3BpY3MpO1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvcmVtb3ZlVG9waWNzXCIsIENvbnRyb2xsZXIucmVtb3ZlVG9waWNzKTtcclxuc3R1ZFJvdXRlci5wb3N0KFwiL2VkaXRBc3Nlc3NtZW50c1BhZ2VcIiwgQ29udHJvbGxlci5lZGl0QXNzZXNzbWVudHNQYWdlKTtcclxuXHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL2dldHRcIiwgQ29udHJvbGxlci5nZXQpO1xyXG5zdHVkUm91dGVyLmRlbGV0ZShcIi9kZWxldGVcIiwgQ29udHJvbGxlci5kZWxldGVCeUlkKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0dWRSb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "studRouter",
        "Router",
        "get",
        "Controller",
        "test",
        "post",
        "test1",
        "main",
        "regPage",
        "logInPage",
        "waiting",
        "teacherPage",
        "adminPage",
        "regController",
        "logIn",
        "registration",
        "editRoles",
        "addSubjects",
        "removeSubjects",
        "addTopics",
        "removeTopics",
        "editAssessmentsPage",
        "deleteById"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,mBAAJ,EAAnB;AAEAD,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWC,IAAnC;AACAJ,UAAU,CAACK,IAAX,CAAgB,QAAhB,EAA0BF,uBAAWG,KAArC,E,CAEA;;AACAN,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWI,IAAnC;AACAP,UAAU,CAACE,GAAX,CAAe,eAAf,EAAgCC,uBAAWK,OAA3C;AACAR,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BC,uBAAWM,SAAxC;AACAT,UAAU,CAACE,GAAX,CAAe,cAAf,EAA+BC,uBAAWO,OAA1C;AACAV,UAAU,CAACE,GAAX,CAAe,cAAf,EAA+BC,uBAAWQ,WAA1C;AACAX,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BC,uBAAWS,SAAxC,E,CAEA;;AACAZ,UAAU,CAACK,IAAX,CAAgB,QAAhB,EAA0BQ,0BAAcC,KAAxC;AACAd,UAAU,CAACK,IAAX,CAAgB,MAAhB,EAAwBQ,0BAAcE,YAAtC,E,CAEA;;AACAf,UAAU,CAACK,IAAX,CAAgB,YAAhB,EAA8BF,uBAAWa,SAAzC;AACAhB,UAAU,CAACK,IAAX,CAAgB,cAAhB,EAAgCF,uBAAWc,WAA3C;AACAjB,UAAU,CAACK,IAAX,CAAgB,iBAAhB,EAAmCF,uBAAWe,cAA9C;AACAlB,UAAU,CAACK,IAAX,CAAgB,YAAhB,EAA8BF,uBAAWgB,SAAzC;AACAnB,UAAU,CAACK,IAAX,CAAgB,eAAhB,EAAiCF,uBAAWiB,YAA5C;AACApB,UAAU,CAACK,IAAX,CAAgB,sBAAhB,EAAwCF,uBAAWkB,mBAAnD;AAEArB,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWD,GAAnC;AACAF,UAAU,UAAV,CAAkB,SAAlB,EAA6BG,uBAAWmB,UAAxC;eAEetB,U",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "sourcesContent": [
        "import Router from \"express\";\r\nimport Controller from \"./controller\";\r\nimport regController from \"./regController\";\r\n\r\nconst studRouter = new Router();\r\n\r\nstudRouter.get(\"/test\", Controller.test);\r\nstudRouter.post(\"/test1\", Controller.test1);\r\n\r\n//render\r\nstudRouter.get(\"/main\", Controller.main);\r\nstudRouter.get(\"/registration\", Controller.regPage);\r\nstudRouter.get(\"/loginPage\", Controller.logInPage);\r\nstudRouter.get(\"/waitForRole\", Controller.waiting);\r\nstudRouter.get(\"/teacherPage\", Controller.teacherPage);\r\nstudRouter.get(\"/adminPage\", Controller.adminPage);\r\n\r\n//registration\r\nstudRouter.post(\"/login\", regController.logIn);\r\nstudRouter.post(\"/add\", regController.registration);\r\n\r\n//other functions\r\nstudRouter.post(\"/editRoles\", Controller.editRoles);\r\nstudRouter.post(\"/addSubjects\", Controller.addSubjects);\r\nstudRouter.post(\"/removeSubjects\", Controller.removeSubjects);\r\nstudRouter.post(\"/addTopics\", Controller.addTopics);\r\nstudRouter.post(\"/removeTopics\", Controller.removeTopics);\r\nstudRouter.post(\"/editAssessmentsPage\", Controller.editAssessmentsPage);\r\n\r\nstudRouter.get(\"/gett\", Controller.get);\r\nstudRouter.delete(\"/delete\", Controller.deleteById);\r\n\r\nexport default studRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1592982008258
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = require(\"mongodb\");\n\nvar _model = _interopRequireDefault(require(\"./model\"));\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\nvar url = 'mongodb://localhost:27017';\nvar dbName = 'taskDB';\n\n_mongoose[\"default\"].connect(url + '/' + dbName);\n\nvar Controller = {\n  main: function main(req, res) {\n    res.render(\"main.ejs\");\n  },\n  regPage: function regPage(req, res) {\n    res.render(\"registration.ejs\");\n  },\n  logInPage: function logInPage(req, res) {\n    res.render(\"logIn.ejs\");\n  },\n  waiting: function waiting(req, res) {\n    res.send(\"<h1>You have no role still!</h1>\");\n  },\n  get: function get(request, response) {\n    _model[\"default\"].find().then(function (inf) {\n      response.send(inf);\n    })[\"catch\"](function (error) {\n      response.status(500).send(error);\n    });\n  },\n  teacherPage: function teacherPage(req, res) {\n    var cookie = req.cookies;\n\n    if (cookie && cookie.role == \"teacher\") {\n      return res.render(\"teacherPage.ejs\");\n    }\n\n    return res.send(\"You are not logged in!\");\n  },\n  editAssessmentsPage: function editAssessmentsPage(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n      if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n      if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n      if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n      return res.render(\"assessmentsPage.ejs\", {\n        data: {\n          data: inf,\n          subject: item.subject\n        }\n      });\n    });\n  },\n  adminPage: function adminPage(req, res) {\n    var cookie = req.cookies;\n\n    if (cookie && cookie.role == \"admin\") {\n      return res.render(\"admin.ejs\");\n    }\n\n    return res.send(\"You are not logged in!\");\n  },\n  editRoles: function editRoles(req, res) {\n    var item = req.body;\n\n    _model[\"default\"].find().then(function (db) {\n      var stud = [];\n      var teach = [];\n\n      if (item.students) {\n        if (typeof item.students == \"string\") {\n          item.students = [item.students];\n        }\n\n        var _iterator = _createForOfIteratorHelper(item.students),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var student = _step.value;\n\n            _model[\"default\"].findOneAndUpdate({\n              email: student\n            }, {\n              role: \"student\"\n            }, {\n              \"new\": true\n            }, function (error, user) {\n              if (error) return res.send(error);\n              if (user) stud.push(user.email);\n            });\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      if (item.teachers) {\n        if (typeof item.teachers == \"string\") {\n          item.teachers = [item.teachers];\n        }\n\n        var _iterator2 = _createForOfIteratorHelper(item.teachers),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var teacher = _step2.value;\n\n            _model[\"default\"].findOneAndUpdate({\n              email: teacher\n            }, {\n              role: \"teacher\"\n            }, {\n              \"new\": true\n            }, function (error, user) {\n              if (error) return res.send(error);\n              if (user) teach.push(user.email);\n            });\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      setTimeout(function () {\n        return res.render(\"changedUsers.ejs\", {\n          students: stud,\n          teachers: teach\n        });\n      }, 100);\n    });\n  },\n  addSubjects: function addSubjects(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\n    if (typeof item.subjects == \"string\") item.subjects = [item.subjects];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator3 = _createForOfIteratorHelper(inf),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var student = _step3.value;\n\n          var _iterator4 = _createForOfIteratorHelper(item.subjects),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var s = _step4.value;\n              if (!student.subjects.hasOwnProperty(s)) student.subjects[\"\".concat(s)] = {\n                topic1: 0\n              };\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findOneAndUpdate({\n            email: student.email\n          }, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  removeSubjects: function removeSubjects(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\n    if (typeof item.subjects == \"string\") item.subjects = [item.subjects];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator5 = _createForOfIteratorHelper(inf),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var student = _step5.value;\n\n          var _iterator6 = _createForOfIteratorHelper(item.subjects),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var s = _step6.value;\n              if (student.subjects.hasOwnProperty(s)) delete student.subjects[\"\".concat(s)];\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findOneAndUpdate({\n            email: student.email\n          }, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  addTopics: function addTopics(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\n    if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\n    if (typeof item.topics == \"string\") item.topics = [item.topics];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator7 = _createForOfIteratorHelper(inf),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var student = _step7.value;\n          if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\");\n\n          var _iterator8 = _createForOfIteratorHelper(item.topics),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var topic = _step8.value;\n              if (!student.subjects[\"\".concat(item.subject)].hasOwnProperty(topic)) student.subjects[\"\".concat(item.subject)][\"\".concat(topic)] = 0;\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n\n          delete student.subjects[\"\".concat(item.subject)][\"topic1\"];\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findByIdAndUpdate(student._id, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  removeTopics: function removeTopics(req, res) {\n    var item = req.body;\n    var grade = parseInt(item.grade);\n    if (!grade) return res.status(400).send(\"You did not enter a grade!\");\n    if (typeof grade != \"number\") return res.status(400).send(\"A grade must be a number!\");\n    if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\n    if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\n    if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\n    if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\n    if (typeof item.topics == \"string\") item.topics = [item.topics];\n\n    _model[\"default\"].find({\n      grade: grade\n    }).then(function (inf) {\n      var _iterator9 = _createForOfIteratorHelper(inf),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var student = _step9.value;\n          if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\");\n\n          var _iterator10 = _createForOfIteratorHelper(item.topics),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var topic = _step10.value;\n              if (student.subjects[\"\".concat(item.subject)].hasOwnProperty(topic)) delete student.subjects[\"\".concat(item.subject)][\"\".concat(topic)];\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          if (Object.keys(student.subjects[\"\".concat(item.subject)]).length == 0) student.subjects[\"\".concat(item.subject)][\"topic1\"] = 0;\n          var updatedUser = {\n            subjects: student.subjects\n          };\n\n          _model[\"default\"].findByIdAndUpdate(student._id, updatedUser, {\n            \"new\": true\n          }, function (error, user) {\n            if (error) return res.send(error);\n          });\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      return res.send(inf);\n    });\n  },\n  deleteById: function deleteById(req, res) {\n    if (req.query.id) {\n      _model[\"default\"].findByIdAndDelete(req.query.id).then(function (deleted) {\n        return res.send(deleted);\n      });\n    }\n  },\n  test: function test(req, res) {\n    res.render(\"test.ejs\", {\n      data: [\"a1\", \"a2\", \"a3\"]\n    });\n  },\n  test1: function test1(req, res) {\n    var data = req.body;\n    return res.send(data);\n  }\n};\nvar _default = Controller;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "mongoose",
        "set",
        "url",
        "dbName",
        "connect",
        "Controller",
        "main",
        "req",
        "res",
        "render",
        "regPage",
        "logInPage",
        "waiting",
        "send",
        "get",
        "request",
        "response",
        "users",
        "find",
        "then",
        "inf",
        "error",
        "status",
        "teacherPage",
        "cookie",
        "cookies",
        "role",
        "editAssessmentsPage",
        "item",
        "body",
        "grade",
        "parseInt",
        "data",
        "subject",
        "adminPage",
        "editRoles",
        "db",
        "stud",
        "teach",
        "students",
        "student",
        "findOneAndUpdate",
        "email",
        "user",
        "push",
        "teachers",
        "teacher",
        "setTimeout",
        "addSubjects",
        "subjects",
        "s",
        "hasOwnProperty",
        "topic1",
        "updatedUser",
        "removeSubjects",
        "addTopics",
        "topics",
        "topic",
        "findByIdAndUpdate",
        "_id",
        "removeTopics",
        "Object",
        "keys",
        "length",
        "deleteById",
        "query",
        "id",
        "findByIdAndDelete",
        "deleted",
        "test",
        "test1"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "sourcesContent": [
        "import { MongoClient, ObjectID } from 'mongodb';\r\nimport users from \"./model\";\r\nimport mongoose, { ConnectionStates } from \"mongoose\";\r\nmongoose.set('useFindAndModify', false);\r\n\r\nconst url = 'mongodb://localhost:27017';\r\nconst dbName = 'taskDB';\r\nmongoose.connect(url + '/' + dbName);\r\n\r\nconst Controller = {\r\n    main: function (req, res) {\r\n        res.render(\"main.ejs\")\r\n    },\r\n\r\n    regPage: function (req, res) {\r\n        res.render(\"registration.ejs\");\r\n    },\r\n\r\n    logInPage: function (req, res) {\r\n        res.render(\"logIn.ejs\")\r\n    },\r\n\r\n    waiting: function (req, res) {\r\n        res.send(\"<h1>You have no role still!</h1>\");\r\n    },\r\n\r\n    get: function (request, response) {\r\n        users.find()\r\n            .then(inf => {\r\n                response.send(inf);\r\n            })\r\n            .catch(\r\n                error => {\r\n                    response.status(500).send(error);\r\n                }\r\n            );\r\n    },\r\n\r\n    teacherPage: function (req, res) {\r\n        let cookie = req.cookies;\r\n        if (cookie && cookie.role == \"teacher\") {\r\n            return res.render(\"teacherPage.ejs\");\r\n        }\r\n        return res.send(\"You are not logged in!\");\r\n\r\n    },\r\n\r\n    editAssessmentsPage: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        users.find({ grade: grade }).then(inf => {\r\n            if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n            if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n            if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n            if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n            return res.render(\"assessmentsPage.ejs\", { data: { data: inf, subject: item.subject } });\r\n        });\r\n    },\r\n\r\n    adminPage: function (req, res) {\r\n        let cookie = req.cookies;\r\n        if (cookie && cookie.role == \"admin\") {\r\n            return res.render(\"admin.ejs\");\r\n        }\r\n        return res.send(\"You are not logged in!\");\r\n    },\r\n\r\n    editRoles: function (req, res) {\r\n        let item = req.body;\r\n        users.find().then(db => {\r\n            let stud = [];\r\n            let teach = [];\r\n            if (item.students) {\r\n                if (typeof (item.students) == \"string\") {\r\n                    item.students = [item.students];\r\n                }\r\n                for (let student of item.students) {\r\n                    users.findOneAndUpdate({ email: student }, { role: \"student\" }, { new: true }, function (error, user) {\r\n                        if (error) return res.send(error);\r\n                        if (user) stud.push(user.email);\r\n                    });\r\n                }\r\n            }\r\n            if (item.teachers) {\r\n                if (typeof (item.teachers) == \"string\") {\r\n                    item.teachers = [item.teachers];\r\n                }\r\n                for (let teacher of item.teachers) {\r\n                    users.findOneAndUpdate({ email: teacher }, { role: \"teacher\" }, { new: true }, function (error, user) {\r\n                        if (error) return res.send(error);\r\n                        if (user) teach.push(user.email);\r\n                    });\r\n                }\r\n            }\r\n            setTimeout(() => {\r\n                return res.render(\"changedUsers.ejs\", { students: stud, teachers: teach });\r\n            }, 100)\r\n        });\r\n    },\r\n\r\n    addSubjects: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\r\n        if (typeof (item.subjects) == \"string\") item.subjects = [item.subjects];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                for (let s of item.subjects) {\r\n                    if (!student.subjects.hasOwnProperty(s))\r\n                        student.subjects[`${s}`] = { topic1: 0 };\r\n                }\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findOneAndUpdate({ email: student.email }, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error)\r\n                })\r\n            }\r\n            return res.send(inf)\r\n        })\r\n    },\r\n\r\n    removeSubjects: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subjects) return res.status(400).send(\"You did not enter subjects!\");\r\n        if (typeof (item.subjects) == \"string\") item.subjects = [item.subjects];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                for (let s of item.subjects) {\r\n                    if (student.subjects.hasOwnProperty(s))\r\n                        delete student.subjects[`${s}`];\r\n                }\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findOneAndUpdate({ email: student.email }, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error)\r\n                });\r\n            }\r\n            return res.send(inf)\r\n        });\r\n    },\r\n\r\n    addTopics: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\r\n        if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\r\n        if (typeof (item.topics) == \"string\") item.topics = [item.topics];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\")\r\n                for (let topic of item.topics) {\r\n                    if (!student.subjects[`${item.subject}`].hasOwnProperty(topic))\r\n                        student.subjects[`${item.subject}`][`${topic}`] = 0;\r\n                }\r\n                delete student.subjects[`${item.subject}`][\"topic1\"]\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findByIdAndUpdate(student._id, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error);\r\n                })\r\n            }\r\n            return res.send(inf);\r\n        })\r\n    },\r\n\r\n    removeTopics: function (req, res) {\r\n        let item = req.body;\r\n        let grade = parseInt(item.grade);\r\n        if (!grade) return res.status(400).send(\"You did not enter a grade!\");\r\n        if (typeof (grade) != \"number\") return res.status(400).send(\"A grade must be a number!\");\r\n        if ((grade ^ 0) !== grade) return res.status(400).send(\"A grade must be integer!\");\r\n        if (grade < 1 || grade > 11) return res.status(400).send(\"A grade must be between 1 and 11!\");\r\n        if (!item.subject) return res.status(400).send(\"You did not enter a subject!\");\r\n        if (!item.topics) return res.status(400).send(\"You did not enter topics!\");\r\n        if (typeof (item.topics) == \"string\") item.topics = [item.topics];\r\n        users.find({ grade: grade }).then(inf => {\r\n            for (let student of inf) {\r\n                if (!student.subjects.hasOwnProperty(item.subject)) return res.send(\"Such subject does not exist!\")\r\n                for (let topic of item.topics) {\r\n                    if (student.subjects[`${item.subject}`].hasOwnProperty(topic))\r\n                        delete student.subjects[`${item.subject}`][`${topic}`];\r\n                }\r\n                if (Object.keys(student.subjects[`${item.subject}`]).length == 0)\r\n                    student.subjects[`${item.subject}`][\"topic1\"] = 0;\r\n                const updatedUser = { subjects: student.subjects };\r\n                users.findByIdAndUpdate(student._id, updatedUser, { new: true }, function (error, user) {\r\n                    if (error) return res.send(error);\r\n                })\r\n            }\r\n            return res.send(inf);\r\n        })\r\n    },\r\n\r\n    deleteById: function (req, res) {\r\n        if (req.query.id) {\r\n            users.findByIdAndDelete(req.query.id).then((deleted) => {\r\n                return res.send(deleted);\r\n            });\r\n        }\r\n    },\r\n\r\n    test: (req, res) => {\r\n        res.render(\"test.ejs\", { data: [\"a1\", \"a2\", \"a3\"] });\r\n    },\r\n\r\n    test1: (req, res) => {\r\n        let data = req.body;\r\n        return res.send(data)\r\n    }\r\n}\r\n\r\nexport default Controller;"
      ]
    },
    "sourceType": "script",
    "mtime": 1592980548515
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\model.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
        "sourceFileName": "model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar ProfileSchema = new _mongoose.Schema({\n  email: String,\n  password: String,\n  fullName: String,\n  grade: {\n    type: Number,\n    \"default\": 0\n  },\n  role: {\n    type: String,\n    \"default\": \"\"\n  },\n  subjects: {\n    type: Object,\n    \"default\": {\n      type: Object\n    }\n  }\n});\nvar users = (0, _mongoose.model)(\"task\", ProfileSchema);\nvar _default = users;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsLmpzIl0sIm5hbWVzIjpbIlByb2ZpbGVTY2hlbWEiLCJTY2hlbWEiLCJlbWFpbCIsIlN0cmluZyIsInBhc3N3b3JkIiwiZnVsbE5hbWUiLCJncmFkZSIsInR5cGUiLCJOdW1iZXIiLCJyb2xlIiwic3ViamVjdHMiLCJPYmplY3QiLCJ1c2VycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLGFBQWEsR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzdCQyxFQUFBQSxLQUFLLEVBQUVDLE1BRHNCO0FBRTdCQyxFQUFBQSxRQUFRLEVBQUVELE1BRm1CO0FBRzdCRSxFQUFBQSxRQUFRLEVBQUVGLE1BSG1CO0FBSTdCRyxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUgsZUFBUztBQUZOLEdBSnNCO0FBUTdCQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkYsSUFBQUEsSUFBSSxFQUFFSixNQURKO0FBRUYsZUFBUztBQUZQLEdBUnVCO0FBWTdCTyxFQUFBQSxRQUFRLEVBQUU7QUFDTkgsSUFBQUEsSUFBSSxFQUFFSSxNQURBO0FBRU4sZUFBUztBQUNMSixNQUFBQSxJQUFJLEVBQUVJO0FBREQ7QUFGSDtBQVptQixDQUFYLENBQXRCO0FBb0JBLElBQU1DLEtBQUssR0FBRyxxQkFBTSxNQUFOLEVBQWNaLGFBQWQsQ0FBZDtlQUVlWSxLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxc0L/RgNCw0LrRgtC40LrQsDFcXHNyY1xcYXBpXFxjb250cm9sbGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XHJcblxyXG5jb25zdCBQcm9maWxlU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgcGFzc3dvcmQ6IFN0cmluZyxcclxuICAgIGZ1bGxOYW1lOiBTdHJpbmcsXHJcbiAgICBncmFkZToge1xyXG4gICAgICAgIHR5cGU6IE51bWJlcixcclxuICAgICAgICBkZWZhdWx0OiAwXHJcbiAgICB9LFxyXG4gICAgcm9sZToge1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICBkZWZhdWx0OiBcIlwiXHJcbiAgICB9LFxyXG4gICAgc3ViamVjdHM6IHtcclxuICAgICAgICB0eXBlOiBPYmplY3QsXHJcbiAgICAgICAgZGVmYXVsdDoge1xyXG4gICAgICAgICAgICB0eXBlOiBPYmplY3RcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0pXHJcblxyXG5jb25zdCB1c2VycyA9IG1vZGVsKFwidGFza1wiLCBQcm9maWxlU2NoZW1hKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZXJzO1xyXG5cclxuXHJcblxyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "model.js"
      ],
      "names": [
        "ProfileSchema",
        "Schema",
        "email",
        "String",
        "password",
        "fullName",
        "grade",
        "type",
        "Number",
        "role",
        "subjects",
        "Object",
        "users"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,gBAAJ,CAAW;AAC7BC,EAAAA,KAAK,EAAEC,MADsB;AAE7BC,EAAAA,QAAQ,EAAED,MAFmB;AAG7BE,EAAAA,QAAQ,EAAEF,MAHmB;AAI7BG,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEC,MADH;AAEH,eAAS;AAFN,GAJsB;AAQ7BC,EAAAA,IAAI,EAAE;AACFF,IAAAA,IAAI,EAAEJ,MADJ;AAEF,eAAS;AAFP,GARuB;AAY7BO,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEI,MADA;AAEN,eAAS;AACLJ,MAAAA,IAAI,EAAEI;AADD;AAFH;AAZmB,CAAX,CAAtB;AAoBA,IAAMC,KAAK,GAAG,qBAAM,MAAN,EAAcZ,aAAd,CAAd;eAEeY,K",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "sourcesContent": [
        "import { Schema, model } from \"mongoose\";\r\n\r\nconst ProfileSchema = new Schema({\r\n    email: String,\r\n    password: String,\r\n    fullName: String,\r\n    grade: {\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    role: {\r\n        type: String,\r\n        default: \"\"\r\n    },\r\n    subjects: {\r\n        type: Object,\r\n        default: {\r\n            type: Object\r\n        }\r\n    }\r\n})\r\n\r\nconst users = model(\"task\", ProfileSchema);\r\n\r\nexport default users;\r\n\r\n\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591812158848
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controller\\\\regController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\regController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\regController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\regController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
        "sourceFileName": "regController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = require(\"mongodb\");\n\nvar _model = _interopRequireDefault(require(\"./model\"));\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\nvar url = 'mongodb://localhost:27017';\nvar dbName = 'taskDB';\n\n_mongoose[\"default\"].connect(url + '/' + dbName);\n\nvar regController = {\n  registration: function registration(request, response) {\n    var newItem = new _model[\"default\"](request.body);\n    var check = true;\n\n    _model[\"default\"].find().then(function (inf) {\n      for (var i = 0; i < inf.length; i++) {\n        if (newItem.email == inf[i].email) {\n          check = false;\n          break;\n        }\n      }\n\n      if (!newItem.email) return response.status(401).send(\"You did not enter an email!\");\n      if (!newItem.password) return response.status(401).send(\"You did not enter a password!\");\n      var grade = newItem.grade;\n\n      if (grade) {\n        if (typeof grade != \"number\") return response.status(401).send(\"A grade must be a number!\");\n        if ((grade ^ 0) !== grade) return response.status(401).send(\"A grade must be integer!\");\n        if (grade > 11 || grade < 1) return response.status(401).send(\"A grade must be between 1 and 12!\");\n      }\n\n      if (!newItem.fullName) return response.status(401).send(\"You did not enter your name!\");\n      if (inf.length == 0) newItem.role = \"admin\";\n      if (check) newItem.save().then(function (user) {\n        return response.render(\"waitForRole.ejs\");\n      });else return response.status(401).send(\"This email has already been taken!!!\");\n    });\n  },\n  logIn: function logIn(req, res) {\n    var item = req.body;\n    if (!item.email) return res.status(400).send(\"You did not enter an email!\");\n    if (!item.password) return res.status(400).send(\"You did not enter a password!\");\n\n    _model[\"default\"].findOne({\n      email: item.email,\n      password: item.password\n    }).then(function (inf) {\n      if (!inf) return res.status(400).send(\"Check your password or email!!!\");\n      if (inf.role == \"\") return res.render(\"waitForRole.ejs\");\n\n      if (inf.role == \"student\") {\n        res.cookie(\"role\", \"student\");\n        return res.render(\"studentSubjects.ejs\", {\n          data: inf.subjects\n        });\n      }\n\n      if (inf.role == \"teacher\") {\n        res.cookie(\"role\", \"teacher\");\n        return res.redirect(\"/teacherPage\");\n      }\n\n      if (inf.role == \"admin\") {\n        res.cookie(\"role\", \"admin\");\n        return res.redirect(\"/adminPage\");\n      } else return res.send(inf);\n    });\n  }\n};\nvar _default = regController;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "regController.js"
      ],
      "names": [
        "mongoose",
        "set",
        "url",
        "dbName",
        "connect",
        "regController",
        "registration",
        "request",
        "response",
        "newItem",
        "users",
        "body",
        "check",
        "find",
        "then",
        "inf",
        "i",
        "length",
        "email",
        "status",
        "send",
        "password",
        "grade",
        "fullName",
        "role",
        "save",
        "user",
        "render",
        "logIn",
        "req",
        "res",
        "item",
        "findOne",
        "cookie",
        "data",
        "subjects",
        "redirect"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controller\\",
      "sourcesContent": [
        "import { MongoClient, ObjectID } from 'mongodb';\r\nimport users from \"./model\";\r\nimport mongoose, { ConnectionStates } from \"mongoose\";\r\nmongoose.set('useFindAndModify', false);\r\n\r\nconst url = 'mongodb://localhost:27017';\r\nconst dbName = 'taskDB';\r\nmongoose.connect(url + '/' + dbName);\r\n\r\nconst regController = {\r\n    registration: function (request, response) {\r\n        const newItem = new users(request.body);\r\n        let check = true;\r\n        users.find().then((inf) => {\r\n            for (let i = 0; i < inf.length; i++) {\r\n                if (newItem.email == inf[i].email) { check = false; break; }\r\n            }\r\n            if (!newItem.email) return response.status(401).send(\"You did not enter an email!\");\r\n            if (!newItem.password) return response.status(401).send(\"You did not enter a password!\");\r\n            let grade = newItem.grade;\r\n            if (grade) {\r\n                if (typeof (grade) != \"number\") return response.status(401).send(\"A grade must be a number!\");\r\n                if ((grade ^ 0) !== grade) return response.status(401).send(\"A grade must be integer!\");\r\n                if (grade > 11 || grade < 1) return response.status(401).send(\"A grade must be between 1 and 12!\");\r\n            }\r\n            if (!newItem.fullName) return response.status(401).send(\"You did not enter your name!\");\r\n            if (inf.length == 0) newItem.role = \"admin\";\r\n            if (check)\r\n                newItem.save().then(user => {\r\n                    return response.render(\"waitForRole.ejs\")\r\n                })\r\n            else return response.status(401).send(\"This email has already been taken!!!\")\r\n        });\r\n    },\r\n\r\n    logIn: function (req, res) {\r\n        let item = req.body;\r\n        if (!item.email) return res.status(400).send(\"You did not enter an email!\");\r\n        if (!item.password) return res.status(400).send(\"You did not enter a password!\");\r\n        users.findOne({ email: item.email, password: item.password }).then(inf => {\r\n            if (!inf) return res.status(400).send(\"Check your password or email!!!\");\r\n            if (inf.role == \"\") return res.render(\"waitForRole.ejs\");\r\n            if (inf.role == \"student\") {\r\n                res.cookie(\"role\", \"student\");\r\n                return res.render(\"studentSubjects.ejs\", { data: inf.subjects });\r\n            }\r\n            if (inf.role == \"teacher\") {\r\n                res.cookie(\"role\", \"teacher\");\r\n                return res.redirect(\"/teacherPage\");\r\n            }\r\n            if (inf.role == \"admin\") {\r\n                res.cookie(\"role\", \"admin\");\r\n                return res.redirect(\"/adminPage\");\r\n            }\r\n            else return res.send(inf)\r\n        });\r\n\r\n    },\r\n}\r\n\r\nexport default regController;"
      ]
    },
    "sourceType": "script",
    "mtime": 1592734720565
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controllers\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _controller = _interopRequireDefault(require(\"./controller\"));\n\nvar _regController = _interopRequireDefault(require(\"./regController\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar studRouter = new _express[\"default\"]();\nstudRouter.get(\"/test\", _controller[\"default\"].test);\nstudRouter.post(\"/test1\", _controller[\"default\"].test1); //render\n\nstudRouter.get(\"/main\", _controller[\"default\"].main);\nstudRouter.get(\"/registration\", _controller[\"default\"].regPage);\nstudRouter.get(\"/loginPage\", _controller[\"default\"].logInPage);\nstudRouter.get(\"/waitForRole\", _controller[\"default\"].waiting);\nstudRouter.get(\"/teacherPage\", _controller[\"default\"].teacherPage);\nstudRouter.get(\"/adminPage\", _controller[\"default\"].adminPage); //registration\n\nstudRouter.post(\"/login\", _regController[\"default\"].logIn);\nstudRouter.post(\"/add\", _regController[\"default\"].registration); //other functions\n\nstudRouter.post(\"/editRoles\", _controller[\"default\"].editRoles);\nstudRouter.post(\"/addSubjects\", _controller[\"default\"].addSubjects);\nstudRouter.post(\"/removeSubjects\", _controller[\"default\"].removeSubjects);\nstudRouter.post(\"/addTopics\", _controller[\"default\"].addTopics);\nstudRouter.post(\"/removeTopics\", _controller[\"default\"].removeTopics);\nstudRouter.post(\"/editAssessmentsPage\", _controller[\"default\"].editAssessmentsPage);\nstudRouter.get(\"/gett\", _controller[\"default\"].get);\nstudRouter[\"delete\"](\"/delete\", _controller[\"default\"].deleteById);\nvar _default = studRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInN0dWRSb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJDb250cm9sbGVyIiwidGVzdCIsInBvc3QiLCJ0ZXN0MSIsIm1haW4iLCJyZWdQYWdlIiwibG9nSW5QYWdlIiwid2FpdGluZyIsInRlYWNoZXJQYWdlIiwiYWRtaW5QYWdlIiwicmVnQ29udHJvbGxlciIsImxvZ0luIiwicmVnaXN0cmF0aW9uIiwiZWRpdFJvbGVzIiwiYWRkU3ViamVjdHMiLCJyZW1vdmVTdWJqZWN0cyIsImFkZFRvcGljcyIsInJlbW92ZVRvcGljcyIsImVkaXRBc3Nlc3NtZW50c1BhZ2UiLCJkZWxldGVCeUlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsSUFBSUMsbUJBQUosRUFBbkI7QUFFQUQsVUFBVSxDQUFDRSxHQUFYLENBQWUsT0FBZixFQUF3QkMsdUJBQVdDLElBQW5DO0FBQ0FKLFVBQVUsQ0FBQ0ssSUFBWCxDQUFnQixRQUFoQixFQUEwQkYsdUJBQVdHLEtBQXJDLEUsQ0FFQTs7QUFDQU4sVUFBVSxDQUFDRSxHQUFYLENBQWUsT0FBZixFQUF3QkMsdUJBQVdJLElBQW5DO0FBQ0FQLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLGVBQWYsRUFBZ0NDLHVCQUFXSyxPQUEzQztBQUNBUixVQUFVLENBQUNFLEdBQVgsQ0FBZSxZQUFmLEVBQTZCQyx1QkFBV00sU0FBeEM7QUFDQVQsVUFBVSxDQUFDRSxHQUFYLENBQWUsY0FBZixFQUErQkMsdUJBQVdPLE9BQTFDO0FBQ0FWLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLGNBQWYsRUFBK0JDLHVCQUFXUSxXQUExQztBQUNBWCxVQUFVLENBQUNFLEdBQVgsQ0FBZSxZQUFmLEVBQTZCQyx1QkFBV1MsU0FBeEMsRSxDQUVBOztBQUNBWixVQUFVLENBQUNLLElBQVgsQ0FBZ0IsUUFBaEIsRUFBMEJRLDBCQUFjQyxLQUF4QztBQUNBZCxVQUFVLENBQUNLLElBQVgsQ0FBZ0IsTUFBaEIsRUFBd0JRLDBCQUFjRSxZQUF0QyxFLENBRUE7O0FBQ0FmLFVBQVUsQ0FBQ0ssSUFBWCxDQUFnQixZQUFoQixFQUE4QkYsdUJBQVdhLFNBQXpDO0FBQ0FoQixVQUFVLENBQUNLLElBQVgsQ0FBZ0IsY0FBaEIsRUFBZ0NGLHVCQUFXYyxXQUEzQztBQUNBakIsVUFBVSxDQUFDSyxJQUFYLENBQWdCLGlCQUFoQixFQUFtQ0YsdUJBQVdlLGNBQTlDO0FBQ0FsQixVQUFVLENBQUNLLElBQVgsQ0FBZ0IsWUFBaEIsRUFBOEJGLHVCQUFXZ0IsU0FBekM7QUFDQW5CLFVBQVUsQ0FBQ0ssSUFBWCxDQUFnQixlQUFoQixFQUFpQ0YsdUJBQVdpQixZQUE1QztBQUNBcEIsVUFBVSxDQUFDSyxJQUFYLENBQWdCLHNCQUFoQixFQUF3Q0YsdUJBQVdrQixtQkFBbkQ7QUFFQXJCLFVBQVUsQ0FBQ0UsR0FBWCxDQUFlLE9BQWYsRUFBd0JDLHVCQUFXRCxHQUFuQztBQUNBRixVQUFVLFVBQVYsQ0FBa0IsU0FBbEIsRUFBNkJHLHVCQUFXbUIsVUFBeEM7ZUFFZXRCLFUiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFzQv9GA0LDQutGC0LjQutCwMVxcc3JjXFxhcGlcXGNvbnRyb2xsZXJzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUm91dGVyIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBDb250cm9sbGVyIGZyb20gXCIuL2NvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHJlZ0NvbnRyb2xsZXIgZnJvbSBcIi4vcmVnQ29udHJvbGxlclwiO1xyXG5cclxuY29uc3Qgc3R1ZFJvdXRlciA9IG5ldyBSb3V0ZXIoKTtcclxuXHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL3Rlc3RcIiwgQ29udHJvbGxlci50ZXN0KTtcclxuc3R1ZFJvdXRlci5wb3N0KFwiL3Rlc3QxXCIsIENvbnRyb2xsZXIudGVzdDEpO1xyXG5cclxuLy9yZW5kZXJcclxuc3R1ZFJvdXRlci5nZXQoXCIvbWFpblwiLCBDb250cm9sbGVyLm1haW4pO1xyXG5zdHVkUm91dGVyLmdldChcIi9yZWdpc3RyYXRpb25cIiwgQ29udHJvbGxlci5yZWdQYWdlKTtcclxuc3R1ZFJvdXRlci5nZXQoXCIvbG9naW5QYWdlXCIsIENvbnRyb2xsZXIubG9nSW5QYWdlKTtcclxuc3R1ZFJvdXRlci5nZXQoXCIvd2FpdEZvclJvbGVcIiwgQ29udHJvbGxlci53YWl0aW5nKTtcclxuc3R1ZFJvdXRlci5nZXQoXCIvdGVhY2hlclBhZ2VcIiwgQ29udHJvbGxlci50ZWFjaGVyUGFnZSk7XHJcbnN0dWRSb3V0ZXIuZ2V0KFwiL2FkbWluUGFnZVwiLCBDb250cm9sbGVyLmFkbWluUGFnZSk7XHJcblxyXG4vL3JlZ2lzdHJhdGlvblxyXG5zdHVkUm91dGVyLnBvc3QoXCIvbG9naW5cIiwgcmVnQ29udHJvbGxlci5sb2dJbik7XHJcbnN0dWRSb3V0ZXIucG9zdChcIi9hZGRcIiwgcmVnQ29udHJvbGxlci5yZWdpc3RyYXRpb24pO1xyXG5cclxuLy9vdGhlciBmdW5jdGlvbnNcclxuc3R1ZFJvdXRlci5wb3N0KFwiL2VkaXRSb2xlc1wiLCBDb250cm9sbGVyLmVkaXRSb2xlcyk7XHJcbnN0dWRSb3V0ZXIucG9zdChcIi9hZGRTdWJqZWN0c1wiLCBDb250cm9sbGVyLmFkZFN1YmplY3RzKTtcclxuc3R1ZFJvdXRlci5wb3N0KFwiL3JlbW92ZVN1YmplY3RzXCIsIENvbnRyb2xsZXIucmVtb3ZlU3ViamVjdHMpO1xyXG5zdHVkUm91dGVyLnBvc3QoXCIvYWRkVG9waWNzXCIsIENvbnRyb2xsZXIuYWRkVG9waWNzKTtcclxuc3R1ZFJvdXRlci5wb3N0KFwiL3JlbW92ZVRvcGljc1wiLCBDb250cm9sbGVyLnJlbW92ZVRvcGljcyk7XHJcbnN0dWRSb3V0ZXIucG9zdChcIi9lZGl0QXNzZXNzbWVudHNQYWdlXCIsIENvbnRyb2xsZXIuZWRpdEFzc2Vzc21lbnRzUGFnZSk7XHJcblxyXG5zdHVkUm91dGVyLmdldChcIi9nZXR0XCIsIENvbnRyb2xsZXIuZ2V0KTtcclxuc3R1ZFJvdXRlci5kZWxldGUoXCIvZGVsZXRlXCIsIENvbnRyb2xsZXIuZGVsZXRlQnlJZCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdHVkUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "studRouter",
        "Router",
        "get",
        "Controller",
        "test",
        "post",
        "test1",
        "main",
        "regPage",
        "logInPage",
        "waiting",
        "teacherPage",
        "adminPage",
        "regController",
        "logIn",
        "registration",
        "editRoles",
        "addSubjects",
        "removeSubjects",
        "addTopics",
        "removeTopics",
        "editAssessmentsPage",
        "deleteById"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,mBAAJ,EAAnB;AAEAD,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWC,IAAnC;AACAJ,UAAU,CAACK,IAAX,CAAgB,QAAhB,EAA0BF,uBAAWG,KAArC,E,CAEA;;AACAN,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWI,IAAnC;AACAP,UAAU,CAACE,GAAX,CAAe,eAAf,EAAgCC,uBAAWK,OAA3C;AACAR,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BC,uBAAWM,SAAxC;AACAT,UAAU,CAACE,GAAX,CAAe,cAAf,EAA+BC,uBAAWO,OAA1C;AACAV,UAAU,CAACE,GAAX,CAAe,cAAf,EAA+BC,uBAAWQ,WAA1C;AACAX,UAAU,CAACE,GAAX,CAAe,YAAf,EAA6BC,uBAAWS,SAAxC,E,CAEA;;AACAZ,UAAU,CAACK,IAAX,CAAgB,QAAhB,EAA0BQ,0BAAcC,KAAxC;AACAd,UAAU,CAACK,IAAX,CAAgB,MAAhB,EAAwBQ,0BAAcE,YAAtC,E,CAEA;;AACAf,UAAU,CAACK,IAAX,CAAgB,YAAhB,EAA8BF,uBAAWa,SAAzC;AACAhB,UAAU,CAACK,IAAX,CAAgB,cAAhB,EAAgCF,uBAAWc,WAA3C;AACAjB,UAAU,CAACK,IAAX,CAAgB,iBAAhB,EAAmCF,uBAAWe,cAA9C;AACAlB,UAAU,CAACK,IAAX,CAAgB,YAAhB,EAA8BF,uBAAWgB,SAAzC;AACAnB,UAAU,CAACK,IAAX,CAAgB,eAAhB,EAAiCF,uBAAWiB,YAA5C;AACApB,UAAU,CAACK,IAAX,CAAgB,sBAAhB,EAAwCF,uBAAWkB,mBAAnD;AAEArB,UAAU,CAACE,GAAX,CAAe,OAAf,EAAwBC,uBAAWD,GAAnC;AACAF,UAAU,UAAV,CAAkB,SAAlB,EAA6BG,uBAAWmB,UAAxC;eAEetB,U",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
      "sourcesContent": [
        "import Router from \"express\";\r\nimport Controller from \"./controller\";\r\nimport regController from \"./regController\";\r\n\r\nconst studRouter = new Router();\r\n\r\nstudRouter.get(\"/test\", Controller.test);\r\nstudRouter.post(\"/test1\", Controller.test1);\r\n\r\n//render\r\nstudRouter.get(\"/main\", Controller.main);\r\nstudRouter.get(\"/registration\", Controller.regPage);\r\nstudRouter.get(\"/loginPage\", Controller.logInPage);\r\nstudRouter.get(\"/waitForRole\", Controller.waiting);\r\nstudRouter.get(\"/teacherPage\", Controller.teacherPage);\r\nstudRouter.get(\"/adminPage\", Controller.adminPage);\r\n\r\n//registration\r\nstudRouter.post(\"/login\", regController.logIn);\r\nstudRouter.post(\"/add\", regController.registration);\r\n\r\n//other functions\r\nstudRouter.post(\"/editRoles\", Controller.editRoles);\r\nstudRouter.post(\"/addSubjects\", Controller.addSubjects);\r\nstudRouter.post(\"/removeSubjects\", Controller.removeSubjects);\r\nstudRouter.post(\"/addTopics\", Controller.addTopics);\r\nstudRouter.post(\"/removeTopics\", Controller.removeTopics);\r\nstudRouter.post(\"/editAssessmentsPage\", Controller.editAssessmentsPage);\r\n\r\nstudRouter.get(\"/gett\", Controller.get);\r\nstudRouter.delete(\"/delete\", Controller.deleteById);\r\n\r\nexport default studRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1592982008258
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controllers\\\\controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\controller.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
        "sourceFileName": "controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = require(\"mongodb\");\n\nvar _userModel = _interopRequireDefault(require(\"../models/userModel\"));\n\nvar _quationModel = _interopRequireDefault(require(\"../models/quationModel\"));\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\nvar url = 'mongodb://localhost:27017';\nvar dbName = 'stackDB';\n\n_mongoose[\"default\"].connect(url + '/' + dbName);\n\nvar Controller = {\n  allUsers: function allUsers(req, res) {\n    _userModel[\"default\"].find().then(function (inf) {\n      res.send(inf);\n    });\n  },\n  main: function main(req, res) {\n    _quationModel[\"default\"].find().then(function (inf) {\n      var item = [];\n\n      var _iterator = _createForOfIteratorHelper(inf),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var q = _step.value;\n          var obj = {};\n          obj.title = q.quation;\n          obj.id = q._id;\n          item.push(obj);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return res.render(\"main.ejs\", {\n        data: item\n      });\n    });\n  },\n  registrationPage: function registrationPage(req, res) {\n    return res.render(\"registrationPage.ejs\");\n  },\n  userPage: function userPage(req, res) {\n    var cookie = req.cookies;\n    if (!cookie.userId) return res.send(\"<h1>You are not logged in!</h1>\");\n\n    _userModel[\"default\"].findById(cookie.userId).then(function (item) {\n      var myQuations = [];\n\n      var _iterator2 = _createForOfIteratorHelper(item.myQuations),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var q = _step2.value;\n          myQuations.push(String(q));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      var userQuations = [];\n\n      _quationModel[\"default\"].find().then(function (inf) {\n        console.log(_typeof(item.myQuations[0]));\n\n        var _iterator3 = _createForOfIteratorHelper(inf),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var quat = _step3.value;\n\n            if (myQuations.includes(String(quat._id))) {\n              var obj = {};\n              obj.title = quat.quation;\n              obj.id = quat._id;\n              userQuations.push(obj);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      });\n\n      setTimeout(function () {\n        return res.render(\"userPage.ejs\", {\n          data: userQuations\n        });\n      }, 100);\n    });\n  },\n  newQuation: function newQuation(req, res) {\n    var newQuation = new _quationModel[\"default\"](req.body);\n    var userId = req.cookies.userId;\n\n    _quationModel[\"default\"].find().then(function (inf) {\n      if (!newQuation.quation) return res.send(\"You did not enter your quation!\");\n      if (!newQuation.description) return res.send(\"You did not enter description!\");\n\n      _userModel[\"default\"].findById(userId).then(function (item) {\n        item.myQuations.unshift(newQuation._id);\n\n        _userModel[\"default\"].findByIdAndUpdate(userId, {\n          myQuations: item.myQuations\n        }, {\n          \"new\": true\n        }, function (error, user) {\n          if (error) return res.send(error);\n        });\n      });\n\n      newQuation.save().then(function (quation) {\n        return res.redirect(\"/userPage\");\n      });\n    });\n  },\n  allQuations: function allQuations(req, res) {\n    _quationModel[\"default\"].find().then(function (inf) {\n      return res.send(inf);\n    });\n  },\n  quationPage: function quationPage(req, res) {\n    _quationModel[\"default\"].findById(req.query.id).then(function (inf) {\n      res.cookie(\"quationId\", inf._id);\n      if (req.cookies.userId) return res.render(\"quationPage.ejs\", {\n        data: inf,\n        isLoggedIn: true\n      });\n      return res.render(\"quationPage.ejs\", {\n        data: inf,\n        isLoggedIn: false\n      });\n    });\n  },\n  addAnswer: function addAnswer(req, res) {\n    var newAnswer = req.body;\n    var cookies = req.cookies;\n    if (!newAnswer.description) return res.send(\"You did not enter description\");\n\n    _quationModel[\"default\"].findById(cookies.quationId).then(function (inf) {\n      inf.answers.push(newAnswer);\n\n      _quationModel[\"default\"].findByIdAndUpdate(cookies.quationId, {\n        answers: inf.answers\n      }, {\n        \"new\": true\n      }, function (error, user) {\n        return res.redirect(307, \"/quationPage?id=\".concat(cookies.quationId));\n      });\n    });\n  }\n};\nvar _default = Controller;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJzZXQiLCJ1cmwiLCJkYk5hbWUiLCJjb25uZWN0IiwiQ29udHJvbGxlciIsImFsbFVzZXJzIiwicmVxIiwicmVzIiwidXNlcnMiLCJmaW5kIiwidGhlbiIsImluZiIsInNlbmQiLCJtYWluIiwicXVhdGlvbnMiLCJpdGVtIiwicSIsIm9iaiIsInRpdGxlIiwicXVhdGlvbiIsImlkIiwiX2lkIiwicHVzaCIsInJlbmRlciIsImRhdGEiLCJyZWdpc3RyYXRpb25QYWdlIiwidXNlclBhZ2UiLCJjb29raWUiLCJjb29raWVzIiwidXNlcklkIiwiZmluZEJ5SWQiLCJteVF1YXRpb25zIiwiU3RyaW5nIiwidXNlclF1YXRpb25zIiwiY29uc29sZSIsImxvZyIsInF1YXQiLCJpbmNsdWRlcyIsInNldFRpbWVvdXQiLCJuZXdRdWF0aW9uIiwiYm9keSIsImRlc2NyaXB0aW9uIiwidW5zaGlmdCIsImZpbmRCeUlkQW5kVXBkYXRlIiwiZXJyb3IiLCJ1c2VyIiwic2F2ZSIsInJlZGlyZWN0IiwiYWxsUXVhdGlvbnMiLCJxdWF0aW9uUGFnZSIsInF1ZXJ5IiwiaXNMb2dnZWRJbiIsImFkZEFuc3dlciIsIm5ld0Fuc3dlciIsInF1YXRpb25JZCIsImFuc3dlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUNBQSxxQkFBU0MsR0FBVCxDQUFhLGtCQUFiLEVBQWlDLEtBQWpDOztBQUVBLElBQU1DLEdBQUcsR0FBRywyQkFBWjtBQUNBLElBQU1DLE1BQU0sR0FBRyxTQUFmOztBQUNBSCxxQkFBU0ksT0FBVCxDQUFpQkYsR0FBRyxHQUFHLEdBQU4sR0FBWUMsTUFBN0I7O0FBRUEsSUFBTUUsVUFBVSxHQUFHO0FBQ2ZDLEVBQUFBLFFBQVEsRUFBRSxrQkFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDcEJDLDBCQUFNQyxJQUFOLEdBQWFDLElB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RSw2QkFBU2dCLFFBQVQsQ0FBa0JGLE9BQU8sQ0FBQzBCLFNBQTFCLEVBQXFDNUMsSUFBckMsQ0FBMEMsVUFBQUMsR0FBRyxFQUFJO0FBQzdDQSxNQUFBQSxHQUFHLENBQUM0QyxPQUFKLENBQVlqQyxJQUFaLENBQWlCK0IsU0FBakI7O0FBQ0F2QywrQkFBUzZCLGlCQUFULENBQTJCZixPQUFPLENBQUMwQixTQUFuQyxFQUE4QztBQUFFQyxRQUFBQSxPQUFPLEVBQUU1QyxHQUFHLENBQUM0QztBQUFmLE9BQTlDLEVBQXdFO0FBQUUsZUFBSztBQUFQLE9BQXhFLEVBQXVGLFVBQUNYLEtBQUQsRUFBUUMsSUFBUixFQUFpQjtBQUNwRyxlQUFPdEMsR0FBRyxDQUFDd0MsUUFBSixDQUFhLEdBQWIsNEJBQXFDbkIsT0FBTyxDQUFDMEIsU0FBN0MsRUFBUDtBQUNILE9BRkQ7QUFHSCxLQUxEO0FBTUg7QUE1RmMsQ0FBbkI7ZUErRmVsRCxVIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxc0L/RgNCw0LrRgtC40LrQsDFcXHNyY1xcYXBpXFxjb250cm9sbGVyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9uZ29DbGllbnQsIE9iamVjdElEIH0gZnJvbSAnbW9uZ29kYic7XHJcbmltcG9ydCB1c2VycyBmcm9tIFwiLi4vbW9kZWxzL3VzZXJNb2RlbFwiO1xyXG5pbXBvcnQgcXVhdGlvbnMgZnJvbSBcIi4uL21vZGVscy9xdWF0aW9uTW9kZWxcIlxyXG5pbXBvcnQgbW9uZ29vc2UsIHsgQ29ubmVjdGlvblN0YXRlcyB9IGZyb20gXCJtb25nb29zZVwiO1xyXG5tb25nb29zZS5zZXQoJ3VzZUZpbmRBbmRNb2RpZnknLCBmYWxzZSk7XHJcblxyXG5jb25zdCB1cmwgPSAnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNyc7XHJcbmNvbnN0IGRiTmFtZSA9ICdzdGFja0RCJztcclxubW9uZ29vc2UuY29ubmVjdCh1cmwgKyAnLycgKyBkYk5hbWUpO1xyXG5cclxuY29uc3QgQ29udHJvbGxlciA9IHtcclxuICAgIGFsbFVzZXJzOiAocmVxLCByZXMpID0+IHtcclxuICAgICAgICB1c2Vycy5maW5kKCkudGhlbihpbmYgPT4ge1xyXG4gICAgICAgICAgICByZXMuc2VuZChpbmYpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIG1haW46IChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAgIHF1YXRpb25zLmZpbmQoKS50aGVuKGluZiA9PiB7XHJcbiAgICAgICAgICAgIGxldCBpdGVtID0gW107XHJcbiAgICAgICAgICAgIGZvciAobGV0IHEgb2YgaW5mKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgb2JqID0ge307XHJcbiAgICAgICAgICAgICAgICBvYmoudGl0bGUgPSBxLnF1YXRpb247XHJcbiAgICAgICAgICAgICAgICBvYmouaWQgPSBxLl9pZDtcclxuICAgICAgICAgICAgICAgIGl0ZW0ucHVzaChvYmopO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXMucmVuZGVyKFwibWFpbi5lanNcIiwgeyBkYXRhOiBpdGVtIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICByZWdpc3RyYXRpb25QYWdlOiAocmVxLCByZXMpID0+IHtcclxuICAgICAgICByZXR1cm4gcmVzLnJlbmRlcihcInJlZ2lzdHJhdGlvblBhZ2UuZWpzXCIpO1xyXG4gICAgfSxcclxuXHJcbiAgICB1c2VyUGFnZTogKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgbGV0IGNvb2tpZSA9IHJlcS5jb29raWVzO1xyXG4gICAgICAgIGlmICghY29va2llLnVzZXJJZCkgcmV0dXJuIHJlcy5zZW5kKFwiPGgxPllvdSBhcmUgbm90IGxvZ2dlZCBpbiE8L2gxPlwiKTtcclxuICAgICAgICB1c2Vycy5maW5kQnlJZChjb29raWUudXNlcklkKS50aGVuKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBsZXQgbXlRdWF0aW9ucyA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBxIG9mIGl0ZW0ubXlRdWF0aW9ucykge1xyXG4gICAgICAgICAgICAgICAgbXlRdWF0aW9ucy5wdXNoKFN0cmluZyhxKSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgdXNlclF1YXRpb25zID0gW11cclxuICAgICAgICAgICAgcXVhdGlvbnMuZmluZCgpLnRoZW4oaW5mID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHR5cGVvZiAoaXRlbS5teVF1YXRpb25zWzBdKSlcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IHF1YXQgb2YgaW5mKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG15UXVhdGlvbnMuaW5jbHVkZXMoU3RyaW5nKHF1YXQuX2lkKSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9iaiA9IHt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvYmoudGl0bGUgPSBxdWF0LnF1YXRpb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9iai5pZCA9IHF1YXQuX2lkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VyUXVhdGlvbnMucHVzaChvYmopXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnJlbmRlcihcInVzZXJQYWdlLmVqc1wiLCB7IGRhdGE6IHVzZXJRdWF0aW9ucyB9KTtcclxuICAgICAgICAgICAgfSwgMTAwKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBuZXdRdWF0aW9uOiAocmVxLCByZXMpID0+IHtcclxuICAgICAgICBsZXQgbmV3UXVhdGlvbiA9IG5ldyBxdWF0aW9ucyhyZXEuYm9keSk7XHJcbiAgICAgICAgbGV0IHVzZXJJZCA9IHJlcS5jb29raWVzLnVzZXJJZDtcclxuICAgICAgICBxdWF0aW9ucy5maW5kKCkudGhlbihpbmYgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIW5ld1F1YXRpb24ucXVhdGlvbikgcmV0dXJuIHJlcy5zZW5kKFwiWW91IGRpZCBub3QgZW50ZXIgeW91ciBxdWF0aW9uIVwiKTtcclxuICAgICAgICAgICAgaWYgKCFuZXdRdWF0aW9uLmRlc2NyaXB0aW9uKSByZXR1cm4gcmVzLnNlbmQoXCJZb3UgZGlkIG5vdCBlbnRlciBkZXNjcmlwdGlvbiFcIik7XHJcbiAgICAgICAgICAgIHVzZXJzLmZpbmRCeUlkKHVzZXJJZCkudGhlbihpdGVtID0+IHtcclxuICAgICAgICAgICAgICAgIGl0ZW0ubXlRdWF0aW9ucy51bnNoaWZ0KG5ld1F1YXRpb24uX2lkKTtcclxuICAgICAgICAgICAgICAgIHVzZXJzLmZpbmRCeUlkQW5kVXBkYXRlKHVzZXJJZCwgeyBteVF1YXRpb25zOiBpdGVtLm15UXVhdGlvbnMgfSwgeyBuZXc6IHRydWUgfSwgKGVycm9yLCB1c2VyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gcmVzLnNlbmQoZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBuZXdRdWF0aW9uLnNhdmUoKS50aGVuKHF1YXRpb24gPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdChcIi91c2VyUGFnZVwiKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIGFsbFF1YXRpb25zOiAocmVxLCByZXMpID0+IHtcclxuICAgICAgICBxdWF0aW9ucy5maW5kKCkudGhlbihpbmYgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnNlbmQoaW5mKVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBxdWF0aW9uUGFnZTogKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgcXVhdGlvbnMuZmluZEJ5SWQocmVxLnF1ZXJ5LmlkKS50aGVuKGluZiA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5jb29raWUoXCJxdWF0aW9uSWRcIiwgaW5mLl9pZCk7XHJcbiAgICAgICAgICAgIGlmIChyZXEuY29va2llcy51c2VySWQpIHJldHVybiByZXMucmVuZGVyKFwicXVhdGlvblBhZ2UuZWpzXCIsIHsgZGF0YTogaW5mLCBpc0xvZ2dlZEluOiB0cnVlIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnJlbmRlcihcInF1YXRpb25QYWdlLmVqc1wiLCB7IGRhdGE6IGluZiwgaXNMb2dnZWRJbjogZmFsc2UgfSlcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcblxyXG4gICAgYWRkQW5zd2VyOiAocmVxLCByZXMpID0+IHtcclxuICAgICAgICBsZXQgbmV3QW5zd2VyID0gcmVxLmJvZHk7XHJcbiAgICAgICAgbGV0IGNvb2tpZXMgPSByZXEuY29va2llcztcclxuICAgICAgICBpZiAoIW5ld0Fuc3dlci5kZXNjcmlwdGlvbikgcmV0dXJuIHJlcy5zZW5kKFwiWW91IGRpZCBub3QgZW50ZXIgZGVzY3JpcHRpb25cIik7XHJcbiAgICAgICAgcXVhdGlvbnMuZmluZEJ5SWQoY29va2llcy5xdWF0aW9uSWQpLnRoZW4oaW5mID0+IHtcclxuICAgICAgICAgICAgaW5mLmFuc3dlcnMucHVzaChuZXdBbnN3ZXIpO1xyXG4gICAgICAgICAgICBxdWF0aW9ucy5maW5kQnlJZEFuZFVwZGF0ZShjb29raWVzLnF1YXRpb25JZCwgeyBhbnN3ZXJzOiBpbmYuYW5zd2VycyB9LCB7IG5ldzogdHJ1ZSB9LCAoZXJyb3IsIHVzZXIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMucmVkaXJlY3QoMzA3LCBgL3F1YXRpb25QYWdlP2lkPSR7Y29va2llcy5xdWF0aW9uSWR9YClcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb250cm9sbGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "controller.js"
      ],
      "names": [
        "mongoose",
        "set",
        "url",
        "dbName",
        "connect",
        "Controller",
        "allUsers",
        "req",
        "res",
        "users",
        "find",
        "then",
        "inf",
        "send",
        "main",
        "quations",
        "item",
        "q",
        "obj",
        "title",
        "quation",
        "id",
        "_id",
        "push",
        "render",
        "data",
        "registrationPage",
        "userPage",
        "cookie",
        "cookies",
        "userId",
        "findById",
        "myQuations",
        "String",
        "userQuations",
        "console",
        "log",
        "quat",
        "includes",
        "setTimeout",
        "newQuation",
        "body",
        "description",
        "unshift",
        "findByIdAndUpdate",
        "error",
        "user",
        "save",
        "redirect",
        "allQuations",
        "quationPage",
        "query",
        "isLoggedIn",
        "addAnswer",
        "newAnswer",
        "quationId",
        "answers"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
      "sourcesContent": [
        "import { MongoClient, ObjectID } from 'mongodb';\r\nimport users from \"../models/userModel\";\r\nimport quations from \"../models/quationModel\"\r\nimport mongoose, { ConnectionStates } from \"mongoose\";\r\nmongoose.set('useFindAndModify', false);\r\n\r\nconst url = 'mongodb://localhost:27017';\r\nconst dbName = 'stackDB';\r\nmongoose.connect(url + '/' + dbName);\r\n\r\nconst Controller = {\r\n    allUsers: (req, res) => {\r\n        users.find().then(inf => {\r\n            res.send(inf)\r\n        });\r\n    },\r\n\r\n    main: (req, res) => {\r\n        quations.find().then(inf => {\r\n            let item = [];\r\n            for (let q of inf) {\r\n                let obj = {};\r\n                obj.title = q.quation;\r\n                obj.id = q._id;\r\n                item.push(obj);\r\n            }\r\n            return res.render(\"main.ejs\", { data: item });\r\n        });\r\n    },\r\n\r\n    registrationPage: (req, res) => {\r\n        return res.render(\"registrationPage.ejs\");\r\n    },\r\n\r\n    userPage: (req, res) => {\r\n        let cookie = req.cookies;\r\n        if (!cookie.userId) return res.send(\"<h1>You are not logged in!</h1>\");\r\n        users.findById(cookie.userId).then(item => {\r\n            let myQuations = [];\r\n            for (let q of item.myQuations) {\r\n                myQuations.push(String(q))\r\n            }\r\n            let userQuations = []\r\n            quations.find().then(inf => {\r\n                console.log(typeof (item.myQuations[0]))\r\n                for (let quat of inf) {\r\n                    if (myQuations.includes(String(quat._id))) {\r\n                        let obj = {};\r\n                        obj.title = quat.quation;\r\n                        obj.id = quat._id;\r\n                        userQuations.push(obj)\r\n                    }\r\n                }\r\n            });\r\n            setTimeout(() => {\r\n                return res.render(\"userPage.ejs\", { data: userQuations });\r\n            }, 100)\r\n        });\r\n    },\r\n\r\n    newQuation: (req, res) => {\r\n        let newQuation = new quations(req.body);\r\n        let userId = req.cookies.userId;\r\n        quations.find().then(inf => {\r\n            if (!newQuation.quation) return res.send(\"You did not enter your quation!\");\r\n            if (!newQuation.description) return res.send(\"You did not enter description!\");\r\n            users.findById(userId).then(item => {\r\n                item.myQuations.unshift(newQuation._id);\r\n                users.findByIdAndUpdate(userId, { myQuations: item.myQuations }, { new: true }, (error, user) => {\r\n                    if (error) return res.send(error);\r\n                });\r\n            });\r\n            newQuation.save().then(quation => {\r\n                return res.redirect(\"/userPage\");\r\n            });\r\n        });\r\n    },\r\n\r\n    allQuations: (req, res) => {\r\n        quations.find().then(inf => {\r\n            return res.send(inf)\r\n        });\r\n    },\r\n\r\n    quationPage: (req, res) => {\r\n        quations.findById(req.query.id).then(inf => {\r\n            res.cookie(\"quationId\", inf._id);\r\n            if (req.cookies.userId) return res.render(\"quationPage.ejs\", { data: inf, isLoggedIn: true });\r\n            return res.render(\"quationPage.ejs\", { data: inf, isLoggedIn: false })\r\n        });\r\n    },\r\n\r\n    addAnswer: (req, res) => {\r\n        let newAnswer = req.body;\r\n        let cookies = req.cookies;\r\n        if (!newAnswer.description) return res.send(\"You did not enter description\");\r\n        quations.findById(cookies.quationId).then(inf => {\r\n            inf.answers.push(newAnswer);\r\n            quations.findByIdAndUpdate(cookies.quationId, { answers: inf.answers }, { new: true }, (error, user) => {\r\n                return res.redirect(307, `/quationPage?id=${cookies.quationId}`)\r\n            });\r\n        });\r\n    },\r\n}\r\n\r\nexport default Controller;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593425137044
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\models\\\\userModel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\userModel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\userModel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\userModel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\",
        "sourceFileName": "userModel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar ProfileSchema = new _mongoose.Schema({\n  email: String,\n  password: String,\n  name: String,\n  role: String,\n  myQuations: {\n    type: Object,\n    \"default\": []\n  }\n});\nvar users = (0, _mongoose.model)(\"allUsers\", ProfileSchema);\nvar _default = users;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJNb2RlbC5qcyJdLCJuYW1lcyI6WyJQcm9maWxlU2NoZW1hIiwiU2NoZW1hIiwiZW1haWwiLCJTdHJpbmciLCJwYXNzd29yZCIsIm5hbWUiLCJyb2xlIiwibXlRdWF0aW9ucyIsInR5cGUiLCJPYmplY3QiLCJ1c2VycyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLGFBQWEsR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzdCQyxFQUFBQSxLQUFLLEVBQUVDLE1BRHNCO0FBRTdCQyxFQUFBQSxRQUFRLEVBQUVELE1BRm1CO0FBRzdCRSxFQUFBQSxJQUFJLEVBQUVGLE1BSHVCO0FBSTdCRyxFQUFBQSxJQUFJLEVBQUVILE1BSnVCO0FBSzdCSSxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVIsZUFBUztBQUZEO0FBTGlCLENBQVgsQ0FBdEI7QUFXQSxJQUFNQyxLQUFLLEdBQUcscUJBQU0sVUFBTixFQUFrQlYsYUFBbEIsQ0FBZDtlQUVlVSxLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVXNlclxcRGVza3RvcFxc0L/RgNCw0LrRgtC40LrQsDFcXHNyY1xcYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNjaGVtYSwgbW9kZWwgfSBmcm9tIFwibW9uZ29vc2VcIjtcclxuXHJcbmNvbnN0IFByb2ZpbGVTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIGVtYWlsOiBTdHJpbmcsXHJcbiAgICBwYXNzd29yZDogU3RyaW5nLFxyXG4gICAgbmFtZTogU3RyaW5nLFxyXG4gICAgcm9sZTogU3RyaW5nLFxyXG4gICAgbXlRdWF0aW9uczoge1xyXG4gICAgICAgIHR5cGU6IE9iamVjdCxcclxuICAgICAgICBkZWZhdWx0OiBbXVxyXG4gICAgfVxyXG59KVxyXG5cclxuY29uc3QgdXNlcnMgPSBtb2RlbChcImFsbFVzZXJzXCIsIFByb2ZpbGVTY2hlbWEpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdXNlcnM7Il19",
    "map": {
      "version": 3,
      "sources": [
        "userModel.js"
      ],
      "names": [
        "ProfileSchema",
        "Schema",
        "email",
        "String",
        "password",
        "name",
        "role",
        "myQuations",
        "type",
        "Object",
        "users"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,gBAAJ,CAAW;AAC7BC,EAAAA,KAAK,EAAEC,MADsB;AAE7BC,EAAAA,QAAQ,EAAED,MAFmB;AAG7BE,EAAAA,IAAI,EAAEF,MAHuB;AAI7BG,EAAAA,IAAI,EAAEH,MAJuB;AAK7BI,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAEC,MADE;AAER,eAAS;AAFD;AALiB,CAAX,CAAtB;AAWA,IAAMC,KAAK,GAAG,qBAAM,UAAN,EAAkBV,aAAlB,CAAd;eAEeU,K",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\",
      "sourcesContent": [
        "import { Schema, model } from \"mongoose\";\r\n\r\nconst ProfileSchema = new Schema({\r\n    email: String,\r\n    password: String,\r\n    name: String,\r\n    role: String,\r\n    myQuations: {\r\n        type: Object,\r\n        default: []\r\n    }\r\n})\r\n\r\nconst users = model(\"allUsers\", ProfileSchema);\r\n\r\nexport default users;"
      ]
    },
    "sourceType": "script",
    "mtime": 1593008447280
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\models\\\\quationModel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\quationModel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\quationModel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\quationModel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\",
        "sourceFileName": "quationModel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\nvar ProfileSchema = new _mongoose.Schema({\n  quation: String,\n  description: String,\n  answers: {\n    type: Object,\n    \"default\": []\n  }\n});\nvar quations = (0, _mongoose.model)(\"quations\", ProfileSchema);\nvar _default = quations;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInF1YXRpb25Nb2RlbC5qcyJdLCJuYW1lcyI6WyJQcm9maWxlU2NoZW1hIiwiU2NoZW1hIiwicXVhdGlvbiIsIlN0cmluZyIsImRlc2NyaXB0aW9uIiwiYW5zd2VycyIsInR5cGUiLCJPYmplY3QiLCJxdWF0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLGFBQWEsR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzdCQyxFQUFBQSxPQUFPLEVBQUVDLE1BRG9CO0FBRTdCQyxFQUFBQSxXQUFXLEVBQUVELE1BRmdCO0FBRzdCRSxFQUFBQSxPQUFPLEVBQUU7QUFDTEMsSUFBQUEsSUFBSSxFQUFFQyxNQUREO0FBRUwsZUFBUztBQUZKO0FBSG9CLENBQVgsQ0FBdEI7QUFTQSxJQUFNQyxRQUFRLEdBQUcscUJBQU0sVUFBTixFQUFrQlIsYUFBbEIsQ0FBakI7ZUFFZVEsUSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFVzZXJcXERlc2t0b3BcXNC/0YDQsNC60YLQuNC60LAxXFxzcmNcXGFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XHJcblxyXG5jb25zdCBQcm9maWxlU2NoZW1hID0gbmV3IFNjaGVtYSh7XHJcbiAgICBxdWF0aW9uOiBTdHJpbmcsXHJcbiAgICBkZXNjcmlwdGlvbjogU3RyaW5nLFxyXG4gICAgYW5zd2Vyczoge1xyXG4gICAgICAgIHR5cGU6IE9iamVjdCxcclxuICAgICAgICBkZWZhdWx0OiBbXVxyXG4gICAgfVxyXG59KVxyXG5cclxuY29uc3QgcXVhdGlvbnMgPSBtb2RlbChcInF1YXRpb25zXCIsIFByb2ZpbGVTY2hlbWEpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcXVhdGlvbnM7Il19",
    "map": {
      "version": 3,
      "sources": [
        "quationModel.js"
      ],
      "names": [
        "ProfileSchema",
        "Schema",
        "quation",
        "String",
        "description",
        "answers",
        "type",
        "Object",
        "quations"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,IAAMA,aAAa,GAAG,IAAIC,gBAAJ,CAAW;AAC7BC,EAAAA,OAAO,EAAEC,MADoB;AAE7BC,EAAAA,WAAW,EAAED,MAFgB;AAG7BE,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAEL,eAAS;AAFJ;AAHoB,CAAX,CAAtB;AASA,IAAMC,QAAQ,GAAG,qBAAM,UAAN,EAAkBR,aAAlB,CAAjB;eAEeQ,Q",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\models\\",
      "sourcesContent": [
        "import { Schema, model } from \"mongoose\";\r\n\r\nconst ProfileSchema = new Schema({\r\n    quation: String,\r\n    description: String,\r\n    answers: {\r\n        type: Object,\r\n        default: []\r\n    }\r\n})\r\n\r\nconst quations = model(\"quations\", ProfileSchema);\r\n\r\nexport default quations;"
      ]
    },
    "sourceType": "script",
    "mtime": 1593425667495
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"filename\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\\\\src\\\\api\\\\controllers\\\\regController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\Desktop\\\\практика1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\User\\Desktop\\практика1",
      "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\regController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\Desktop\\практика1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\regController.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\regController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
        "sourceFileName": "regController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = require(\"mongodb\");\n\nvar _userModel = _interopRequireDefault(require(\"../models/userModel\"));\n\nvar _mongoose = _interopRequireWildcard(require(\"mongoose\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\nvar url = 'mongodb://localhost:27017';\nvar dbName = 'stackDB';\n\n_mongoose[\"default\"].connect(url + '/' + dbName);\n\nvar Controller = {\n  registration: function registration(request, response) {\n    var newItem = new _userModel[\"default\"](request.body);\n    var check = true;\n\n    _userModel[\"default\"].find().then(function (inf) {\n      var _iterator = _createForOfIteratorHelper(inf),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (newItem.email == item.email) {\n            check = false;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!newItem.email) return response.status(400).send(\"You did not enter an email!\");\n      if (!newItem.password) return response.status(400).send(\"You did not enter a password!\");\n      if (!newItem.name) return response.status(400).send(\"You did not enter your name!\");\n      if (inf.length == 0) newItem.role = \"admin\";else newItem.role = \"user\";\n      if (check) newItem.save().then(function (user) {\n        response.cookie(\"userId\", newItem._id);\n        return response.redirect(\"/userPage\");\n      });else return response.status(400).send(\"This email has already been taken!!!\");\n    });\n  },\n  logIn: function logIn(req, res) {\n    var item = req.body;\n    if (!item.email) return res.status(400).send(\"You did not enter an email!\");\n    if (!item.password) return res.status(400).send(\"You did not enter a password!\");\n\n    _userModel[\"default\"].findOne({\n      email: item.email,\n      password: item.password\n    }).then(function (inf) {\n      if (!inf) return res.status(400).send(\"Check your password or email!!!\");\n      res.cookie(\"userId\", inf._id);\n      return res.redirect(\"/userPage\");\n    });\n  },\n  logOut: function logOut(req, res) {\n    res.clearCookie(\"userId\");\n    res.redirect(\"/main\");\n  },\n  deleteById: function deleteById(req, res) {\n    if (req.query.id) {\n      _userModel[\"default\"].findByIdAndDelete(req.query.id).then(function (deleted) {\n        return res.send(deleted);\n      });\n    }\n  }\n};\nvar _default = Controller;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ0NvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJzZXQiLCJ1cmwiLCJkYk5hbWUiLCJjb25uZWN0IiwiQ29udHJvbGxlciIsInJlZ2lzdHJhdGlvbiIsInJlcXVlc3QiLCJyZXNwb25zZSIsIm5ld0l0ZW0iLCJ1c2VycyIsImJvZHkiLCJjaGVjayIsImZpbmQiLCJ0aGVuIiwiaW5mIiwiaXRlbSIsImVtYWlsIiwic3RhdHVzIiwic2VuZCIsInBhc3N3b3JkIiwibmFtZSIsImxlbmd0aCIsInJvbGUiLCJzYXZlIiwidXNlciIsImNvb2tpZSIsIl9pZCIsInJlZGlyZWN0IiwibG9nSW4iLCJyZXEiLCJyZXMiLCJmaW5kT25lIiwibG9nT3V0IiwiY2xlYXJDb29raWUiLCJkZWxldGVCeUlkIiwicXVlcnkiLCJpZCIsImZpbmRCeUlkQW5kRGVsZXRlIiwiZGVsZXRlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0FBQ0FBLHFCQUFTQyxHQUFULENBQWEsa0JBQWIsRUFBaUMsS0FBakM7O0FBRUEsSUFBTUMsR0FBRyxHQUFHLDJCQUFaO0FBQ0EsSUFBTUMsTUFBTSxHQUFHLFNBQWY7O0FBQ0FILHFCQUFTSSxPQUFULENBQWlCRixHQUFHLEdBQUcsR0FBTixHQUFZQyxNQUE3Qjs7QUFFQSxJQUFNRSxVQUFVLEdBQUc7QUFDZkMsRUFBQUEsWUFBWSxFQUFFLHNCQUFDQyxPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDakMsUUFBTUMsT0FBTyxHQUFHLElBQUlDLHFCQUFKLENBQVVILE9BQU8sQ0FBQ0ksSUFBbEIsQ0FBaEI7QUFDQSxRQUFJQyxLQUFLLEdBQUcsSUFBWjs7QUFDQUYsMEJBQU1HLElBQU4sR0FBYUMsSUFBYixDQUFrQixVQUFDQyxHQUFELEVBQVM7QUFBQSxpREFDTEEsR0FESztBQUFBOztBQUFBO0FBQ3ZCLDREQUF3QjtBQUFBLGNBQWZDLElBQWU7O0FBQ3BCLGNBQUlQLE9BQU8s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Q3lCLE9BQUQsRUFBYTtBQUNwRCxlQUFPUixHQUFHLENBQUNaLElBQUosQ0FBU29CLE9BQVQsQ0FBUDtBQUNILE9BRkQ7QUFHSDtBQUNKO0FBNUNjLENBQW5CO2VBK0NlbEMsVSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFVzZXJcXERlc2t0b3BcXNC/0YDQsNC60YLQuNC60LAxXFxzcmNcXGFwaVxcY29udHJvbGxlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbmdvQ2xpZW50LCBPYmplY3RJRCB9IGZyb20gJ21vbmdvZGInO1xyXG5pbXBvcnQgdXNlcnMgZnJvbSBcIi4uL21vZGVscy91c2VyTW9kZWxcIjtcclxuaW1wb3J0IG1vbmdvb3NlLCB7IENvbm5lY3Rpb25TdGF0ZXMgfSBmcm9tIFwibW9uZ29vc2VcIjtcclxubW9uZ29vc2Uuc2V0KCd1c2VGaW5kQW5kTW9kaWZ5JywgZmFsc2UpO1xyXG5cclxuY29uc3QgdXJsID0gJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnO1xyXG5jb25zdCBkYk5hbWUgPSAnc3RhY2tEQic7XHJcbm1vbmdvb3NlLmNvbm5lY3QodXJsICsgJy8nICsgZGJOYW1lKTtcclxuXHJcbmNvbnN0IENvbnRyb2xsZXIgPSB7XHJcbiAgICByZWdpc3RyYXRpb246IChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5ld0l0ZW0gPSBuZXcgdXNlcnMocmVxdWVzdC5ib2R5KTtcclxuICAgICAgICBsZXQgY2hlY2sgPSB0cnVlO1xyXG4gICAgICAgIHVzZXJzLmZpbmQoKS50aGVuKChpbmYpID0+IHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaXRlbSBvZiAoaW5mKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKG5ld0l0ZW0uZW1haWwgPT0gaXRlbS5lbWFpbCkgeyBjaGVjayA9IGZhbHNlOyBicmVhazsgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghbmV3SXRlbS5lbWFpbCkgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyg0MDApLnNlbmQoXCJZb3UgZGlkIG5vdCBlbnRlciBhbiBlbWFpbCFcIik7XHJcbiAgICAgICAgICAgIGlmICghbmV3SXRlbS5wYXNzd29yZCkgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyg0MDApLnNlbmQoXCJZb3UgZGlkIG5vdCBlbnRlciBhIHBhc3N3b3JkIVwiKTtcclxuICAgICAgICAgICAgaWYgKCFuZXdJdGVtLm5hbWUpIHJldHVybiByZXNwb25zZS5zdGF0dXMoNDAwKS5zZW5kKFwiWW91IGRpZCBub3QgZW50ZXIgeW91ciBuYW1lIVwiKTtcclxuICAgICAgICAgICAgaWYgKGluZi5sZW5ndGggPT0gMCkgbmV3SXRlbS5yb2xlID0gXCJhZG1pblwiO1xyXG4gICAgICAgICAgICBlbHNlIG5ld0l0ZW0ucm9sZSA9IFwidXNlclwiO1xyXG4gICAgICAgICAgICBpZiAoY2hlY2spXHJcbiAgICAgICAgICAgICAgICBuZXdJdGVtLnNhdmUoKS50aGVuKHVzZXIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmNvb2tpZShcInVzZXJJZFwiLCBuZXdJdGVtLl9pZClcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UucmVkaXJlY3QoXCIvdXNlclBhZ2VcIilcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBlbHNlIHJldHVybiByZXNwb25zZS5zdGF0dXMoNDAwKS5zZW5kKFwiVGhpcyBlbWFpbCBoYXMgYWxyZWFkeSBiZWVuIHRha2VuISEhXCIpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG5cclxuICAgIGxvZ0luOiBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuICAgICAgICBsZXQgaXRlbSA9IHJlcS5ib2R5O1xyXG4gICAgICAgIGlmICghaXRlbS5lbWFpbCkgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKFwiWW91IGRpZCBub3QgZW50ZXIgYW4gZW1haWwhXCIpO1xyXG4gICAgICAgIGlmICghaXRlbS5wYXNzd29yZCkgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKFwiWW91IGRpZCBub3QgZW50ZXIgYSBwYXNzd29yZCFcIik7XHJcbiAgICAgICAgdXNlcnMuZmluZE9uZSh7IGVtYWlsOiBpdGVtLmVtYWlsLCBwYXNzd29yZDogaXRlbS5wYXNzd29yZCB9KS50aGVuKGluZiA9PiB7XHJcbiAgICAgICAgICAgIGlmICghaW5mKSByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoXCJDaGVjayB5b3VyIHBhc3N3b3JkIG9yIGVtYWlsISEhXCIpO1xyXG4gICAgICAgICAgICByZXMuY29va2llKFwidXNlcklkXCIsIGluZi5faWQpO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnJlZGlyZWN0KFwiL3VzZXJQYWdlXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBsb2dPdXQ6IChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAgIHJlcy5jbGVhckNvb2tpZShcInVzZXJJZFwiKTtcclxuICAgICAgICByZXMucmVkaXJlY3QoXCIvbWFpblwiKVxyXG4gICAgfSxcclxuXHJcbiAgICBkZWxldGVCeUlkOiBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuICAgICAgICBpZiAocmVxLnF1ZXJ5LmlkKSB7XHJcbiAgICAgICAgICAgIHVzZXJzLmZpbmRCeUlkQW5kRGVsZXRlKHJlcS5xdWVyeS5pZCkudGhlbigoZGVsZXRlZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zZW5kKGRlbGV0ZWQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29udHJvbGxlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "regController.js"
      ],
      "names": [
        "mongoose",
        "set",
        "url",
        "dbName",
        "connect",
        "Controller",
        "registration",
        "request",
        "response",
        "newItem",
        "users",
        "body",
        "check",
        "find",
        "then",
        "inf",
        "item",
        "email",
        "status",
        "send",
        "password",
        "name",
        "length",
        "role",
        "save",
        "user",
        "cookie",
        "_id",
        "redirect",
        "logIn",
        "req",
        "res",
        "findOne",
        "logOut",
        "clearCookie",
        "deleteById",
        "query",
        "id",
        "findByIdAndDelete",
        "deleted"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;AACAA,qBAASC,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AAEA,IAAMC,GAAG,GAAG,2BAAZ;AACA,IAAMC,MAAM,GAAG,SAAf;;AACAH,qBAASI,OAAT,CAAiBF,GAAG,GAAG,GAAN,GAAYC,MAA7B;;AAEA,IAAME,UAAU,GAAG;AACfC,EAAAA,YAAY,EAAE,sBAACC,OAAD,EAAUC,QAAV,EAAuB;AACjC,QAAMC,OAAO,GAAG,IAAIC,qBAAJ,CAAUH,OAAO,CAACI,IAAlB,CAAhB;AACA,QAAIC,KAAK,GAAG,IAAZ;;AACAF,0BAAMG,IAAN,GAAaC,IAAb,CAAkB,UAACC,GAAD,EAAS;AAAA,iDACLA,GADK;AAAA;;AAAA;AACvB,4DAAwB;AAAA,cAAfC,IAAe;;AACpB,cAAIP,OAAO,CAACQ,KAAR,IAAiBD,IAAI,CAACC,KAA1B,EAAiC;AAAEL,YAAAA,KAAK,GAAG,KAAR;AAAe;AAAQ;AAC7D;AAHsB;AAAA;AAAA;AAAA;AAAA;;AAIvB,UAAI,CAACH,OAAO,CAACQ,KAAb,EAAoB,OAAOT,QAAQ,CAACU,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,6BAA1B,CAAP;AACpB,UAAI,CAACV,OAAO,CAACW,QAAb,EAAuB,OAAOZ,QAAQ,CAACU,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,+BAA1B,CAAP;AACvB,UAAI,CAACV,OAAO,CAACY,IAAb,EAAmB,OAAOb,QAAQ,CAACU,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,8BAA1B,CAAP;AACnB,UAAIJ,GAAG,CAACO,MAAJ,IAAc,CAAlB,EAAqBb,OAAO,CAACc,IAAR,GAAe,OAAf,CAArB,KACKd,OAAO,CAACc,IAAR,GAAe,MAAf;AACL,UAAIX,KAAJ,EACIH,OAAO,CAACe,IAAR,GAAeV,IAAf,CAAoB,UAAAW,IAAI,EAAI;AACxBjB,QAAAA,QAAQ,CAACkB,MAAT,CAAgB,QAAhB,EAA0BjB,OAAO,CAACkB,GAAlC;AACA,eAAOnB,QAAQ,CAACoB,QAAT,CAAkB,WAAlB,CAAP;AACH,OAHD,EADJ,KAKK,OAAOpB,QAAQ,CAACU,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,sCAA1B,CAAP;AACR,KAfD;AAgBH,GApBc;AAsBfU,EAAAA,KAAK,EAAE,eAAUC,GAAV,EAAeC,GAAf,EAAoB;AACvB,QAAIf,IAAI,GAAGc,GAAG,CAACnB,IAAf;AACA,QAAI,CAACK,IAAI,CAACC,KAAV,EAAiB,OAAOc,GAAG,CAACb,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,6BAArB,CAAP;AACjB,QAAI,CAACH,IAAI,CAACI,QAAV,EAAoB,OAAOW,GAAG,CAACb,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,+BAArB,CAAP;;AACpBT,0BAAMsB,OAAN,CAAc;AAAEf,MAAAA,KAAK,EAAED,IAAI,CAACC,KAAd;AAAqBG,MAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAApC,KAAd,EAA8DN,IAA9D,CAAmE,UAAAC,GAAG,EAAI;AACtE,UAAI,CAACA,GAAL,EAAU,OAAOgB,GAAG,CAACb,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB,CAAP;AACVY,MAAAA,GAAG,CAACL,MAAJ,CAAW,QAAX,EAAqBX,GAAG,CAACY,GAAzB;AACA,aAAOI,GAAG,CAACH,QAAJ,CAAa,WAAb,CAAP;AACH,KAJD;AAKH,GA/Bc;AAiCfK,EAAAA,MAAM,EAAE,gBAACH,GAAD,EAAMC,GAAN,EAAc;AAClBA,IAAAA,GAAG,CAACG,WAAJ,CAAgB,QAAhB;AACAH,IAAAA,GAAG,CAACH,QAAJ,CAAa,OAAb;AACH,GApCc;AAsCfO,EAAAA,UAAU,EAAE,oBAAUL,GAAV,EAAeC,GAAf,EAAoB;AAC5B,QAAID,GAAG,CAACM,KAAJ,CAAUC,EAAd,EAAkB;AACd3B,4BAAM4B,iBAAN,CAAwBR,GAAG,CAACM,KAAJ,CAAUC,EAAlC,EAAsCvB,IAAtC,CAA2C,UAACyB,OAAD,EAAa;AACpD,eAAOR,GAAG,CAACZ,IAAJ,CAASoB,OAAT,CAAP;AACH,OAFD;AAGH;AACJ;AA5Cc,CAAnB;eA+CelC,U",
      "sourceRoot": "C:\\Users\\User\\Desktop\\практика1\\src\\api\\controllers\\",
      "sourcesContent": [
        "import { MongoClient, ObjectID } from 'mongodb';\r\nimport users from \"../models/userModel\";\r\nimport mongoose, { ConnectionStates } from \"mongoose\";\r\nmongoose.set('useFindAndModify', false);\r\n\r\nconst url = 'mongodb://localhost:27017';\r\nconst dbName = 'stackDB';\r\nmongoose.connect(url + '/' + dbName);\r\n\r\nconst Controller = {\r\n    registration: (request, response) => {\r\n        const newItem = new users(request.body);\r\n        let check = true;\r\n        users.find().then((inf) => {\r\n            for (let item of (inf)) {\r\n                if (newItem.email == item.email) { check = false; break; }\r\n            }\r\n            if (!newItem.email) return response.status(400).send(\"You did not enter an email!\");\r\n            if (!newItem.password) return response.status(400).send(\"You did not enter a password!\");\r\n            if (!newItem.name) return response.status(400).send(\"You did not enter your name!\");\r\n            if (inf.length == 0) newItem.role = \"admin\";\r\n            else newItem.role = \"user\";\r\n            if (check)\r\n                newItem.save().then(user => {\r\n                    response.cookie(\"userId\", newItem._id)\r\n                    return response.redirect(\"/userPage\")\r\n                });\r\n            else return response.status(400).send(\"This email has already been taken!!!\")\r\n        });\r\n    },\r\n\r\n    logIn: function (req, res) {\r\n        let item = req.body;\r\n        if (!item.email) return res.status(400).send(\"You did not enter an email!\");\r\n        if (!item.password) return res.status(400).send(\"You did not enter a password!\");\r\n        users.findOne({ email: item.email, password: item.password }).then(inf => {\r\n            if (!inf) return res.status(400).send(\"Check your password or email!!!\");\r\n            res.cookie(\"userId\", inf._id);\r\n            return res.redirect(\"/userPage\");\r\n        });\r\n    },\r\n\r\n    logOut: (req, res) => {\r\n        res.clearCookie(\"userId\");\r\n        res.redirect(\"/main\")\r\n    },\r\n\r\n    deleteById: function (req, res) {\r\n        if (req.query.id) {\r\n            users.findByIdAndDelete(req.query.id).then((deleted) => {\r\n                return res.send(deleted);\r\n            });\r\n        }\r\n    },\r\n};\r\n\r\nexport default Controller;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593602487140
  }
}